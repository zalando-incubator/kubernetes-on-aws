#cloud-config

write_files:
  - owner: root:root
    path: /etc/kubernetes/secrets.env
    content: |
      NODEPOOL_TAINTS={{if index .NodePool.ConfigItems "taints"}}{{.NodePool.ConfigItems.taints}}{{end}}
      NODE_LABELS={{ .Values.node_labels }},node.kubernetes.io/distro=ubuntu{{if index .NodePool.ConfigItems "labels"}},{{.NodePool.ConfigItems.labels}}{{end}}
      NODEPOOL_NAME={{ .NodePool.Name }}
      KUBELET_ROLE=worker

{{if index .NodePool.ConfigItems "instance_storage_mount_path"}}
  - owner: root:root
    path: /etc/kuberuntu/instance-storage.env
    content: |
      MOUNT_DIRECTORY={{.NodePool.ConfigItems.instance_storage_mount_path}}
{{end}}

  - owner: root:root
    path: /etc/kuberuntu/s3-certs.env
    content: |
      S3_CERTS_BUCKET={{ .S3GeneratedFilesPath }}
      AWS_DEFAULT_REGION={{ .Cluster.Region }}

  - owner: root:root
    path: /etc/kubernetes/kubeconfig
    content: |
      apiVersion: v1
      kind: Config
      clusters:
      - name: local
        cluster:
          server: {{ .Cluster.APIServerURL }}
      users:
      - name: kubelet
        user:
          token: {{ .Cluster.ConfigItems.worker_shared_secret }}
      contexts:
      - context:
          cluster: local
          user: kubelet
        name: kubelet-context
      current-context: kubelet-context

  - owner: root:root
    path: /etc/kubernetes/config/kubelet.yaml
    content: |
      # https://github.com/kubernetes/kubernetes/blob/v1.13.6/staging/src/k8s.io/kubelet/config/v1beta1/types.go
      apiVersion: kubelet.config.k8s.io/v1beta1
      kind: KubeletConfiguration
      clusterDomain: cluster.local
      cpuCFSQuota: false
{{- if ne .NodePool.ConfigItems.pod_max_pids "-1" }}
      featureGates:
        SupportPodPidsLimit: true
      podPidsLimit: {{ .NodePool.ConfigItems.pod_max_pids }}
{{- end }}
      cpuManagerPolicy: {{ .NodePool.ConfigItems.cpu_manager_policy }}
      maxPods: {{ .Cluster.ConfigItems.node_max_pods }}
      healthzPort: 10248
      healthzBindAddress: "0.0.0.0"
      tlsCertFile: "/etc/kubernetes/ssl/worker.pem"
      tlsPrivateKeyFile: "/etc/kubernetes/ssl/worker-key.pem"
      eventRecordQPS: 50
      eventBurst: 50
      kubeAPIQPS: 50
      kubeAPIBurst: 50
      systemReserved:
        cpu: "100m"
        memory: "164Mi"
      kubeReserved:
        cpu: "100m"
        memory: "282Mi"
      authentication:
        anonymous:
          enabled: false
        webhook:
          enabled: true
          cacheTTL: "2m"
        x509:
          clientCAFile: "/etc/kubernetes/ssl/ca.pem"
      authorization:
        mode: Webhook
        webhook:
          cacheAuthorizedTTL: "5m"
          cacheUnauthorizedTTL: "30s"
      readOnlyPort: 10255 # TODO: remove after complete rollout of webhook auth
