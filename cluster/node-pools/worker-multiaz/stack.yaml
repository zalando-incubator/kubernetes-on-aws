AWSTemplateFormatVersion: 2010-09-09
Description: Kubernetes default worker node pool

Mappings:
  Images:
    eu-central-1:
      StableCoreOSImage: ami-604e118b

Conditions:
  UseSpotPrice:
    Fn::Not:
      - Fn::Equals:
        - "{{ .Values.spot_price }}"
        - ""

Resources:
  AutoScalingGroupA:
    CreationPolicy:
      ResourceSignal:
        Count: '0'
        Timeout: PT15M
    Properties:
      HealthCheckGracePeriod: 300
      HealthCheckType: EC2
      LaunchConfigurationName: !Ref AutoScalingConfig
      MinSize: '{{ .NodePool.MinSize }}'
      MaxSize: '{{ .NodePool.MaxSize }}'
      Tags:
      - Key: Name
        PropagateAtLaunch: true
        Value: "{{ .NodePool.Name }} ({{ .Cluster.ID }})"
      - Key: k8s.io/role/node
        PropagateAtLaunch: true
        Value: worker
      - Key: k8s.io/cluster-autoscaler/enabled
        PropagateAtLaunch: true
        Value: ''
      - Key: k8s.io/cluster-autoscaler/node-template/label/lifecycle-status
        PropagateAtLaunch: true
        Value: ready
      - Key: 'zalando.de/cluster-local-id/{{ .Cluster.LocalID }}'
        PropagateAtLaunch: true
        Value: owned
{{ with $subnets := index .Values.subnets "eu-central-1a" }}
      VPCZoneIdentifier: !Split [",", "{{$subnets}}"]
{{ end }}
    Type: 'AWS::AutoScaling::AutoScalingGroup'
  AutoscalingLifecycleHookA:
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroupA
      LifecycleHookName: "kube-node-ready-lifecycle-hook"
      DefaultResult: CONTINUE
      HeartbeatTimeout: '600'
      LifecycleTransition: 'autoscaling:EC2_INSTANCE_LAUNCHING'
    Type: 'AWS::AutoScaling::LifecycleHook'
  AutoScalingGroupB:
    CreationPolicy:
      ResourceSignal:
        Count: '0'
        Timeout: PT15M
    Properties:
      HealthCheckGracePeriod: 300
      HealthCheckType: EC2
      LaunchConfigurationName: !Ref AutoScalingConfig
      MinSize: '{{ .NodePool.MinSize }}'
      MaxSize: '{{ .NodePool.MaxSize }}'
      Tags:
      - Key: Name
        PropagateAtLaunch: true
        Value: "{{ .NodePool.Name }} ({{ .Cluster.ID }})"
      - Key: k8s.io/role/node
        PropagateAtLaunch: true
        Value: worker
      - Key: k8s.io/cluster-autoscaler/enabled
        PropagateAtLaunch: true
        Value: ''
      - Key: k8s.io/cluster-autoscaler/node-template/label/lifecycle-status
        PropagateAtLaunch: true
        Value: ready
      - Key: 'zalando.de/cluster-local-id/{{ .Cluster.LocalID }}'
        PropagateAtLaunch: true
        Value: owned
{{ with $subnets := index .Values.subnets "eu-central-1b" }}
      VPCZoneIdentifier: !Split [",", "{{$subnets}}"]
{{ end }}
    Type: 'AWS::AutoScaling::AutoScalingGroup'
  AutoscalingLifecycleHookB:
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroupB
      LifecycleHookName: "kube-node-ready-lifecycle-hook"
      DefaultResult: CONTINUE
      HeartbeatTimeout: '600'
      LifecycleTransition: 'autoscaling:EC2_INSTANCE_LAUNCHING'
    Type: 'AWS::AutoScaling::LifecycleHook'
  AutoScalingGroupC:
    CreationPolicy:
      ResourceSignal:
        Count: '0'
        Timeout: PT15M
    Properties:
      HealthCheckGracePeriod: 300
      HealthCheckType: EC2
      LaunchConfigurationName: !Ref AutoScalingConfig
      MinSize: '{{ .NodePool.MinSize }}'
      MaxSize: '{{ .NodePool.MaxSize }}'
      Tags:
      - Key: Name
        PropagateAtLaunch: true
        Value: "{{ .NodePool.Name }} ({{ .Cluster.ID }})"
      - Key: k8s.io/role/node
        PropagateAtLaunch: true
        Value: worker
      - Key: k8s.io/cluster-autoscaler/enabled
        PropagateAtLaunch: true
        Value: ''
      - Key: k8s.io/cluster-autoscaler/node-template/label/lifecycle-status
        PropagateAtLaunch: true
        Value: ready
      - Key: 'zalando.de/cluster-local-id/{{ .Cluster.LocalID }}'
        PropagateAtLaunch: true
        Value: owned
{{ with $subnets := index .Values.subnets "eu-central-1c" }}
      VPCZoneIdentifier: !Split [",", "{{$subnets}}"]
{{ end }}
    Type: 'AWS::AutoScaling::AutoScalingGroup'
  AutoscalingLifecycleHookC:
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroupC
      LifecycleHookName: "kube-node-ready-lifecycle-hook"
      DefaultResult: CONTINUE
      HeartbeatTimeout: '600'
      LifecycleTransition: 'autoscaling:EC2_INSTANCE_LAUNCHING'
    Type: 'AWS::AutoScaling::LifecycleHook'

  AutoScalingConfig:
    Properties:
      AssociatePublicIpAddress: true
      BlockDeviceMappings:
      - DeviceName: /dev/xvda
        Ebs:
          VolumeSize: 50
          VolumeType: standard
      EbsOptimized: false
      IamInstanceProfile: !Ref AutoScalingInstanceProfile
      ImageId: !FindInMap
      - Images
      - !Ref 'AWS::Region'
      - StableCoreOSImage
      InstanceType: "{{ .NodePool.InstanceType }}"
      SecurityGroups:
      - !ImportValue '{{ .Cluster.ID }}:worker-security-group'
      UserData: "{{ .UserData }}"
      SpotPrice:
        Fn::If:
          - UseSpotPrice
          - "{{ .Values.spot_price }}"
          - Ref: AWS::NoValue
    Type: 'AWS::AutoScaling::LaunchConfiguration'
  AutoScalingInstanceProfile:
    Properties:
      Path: /
      Roles:
      - !ImportValue '{{ .Cluster.ID }}:worker-iam-role'
    Type: 'AWS::IAM::InstanceProfile'
