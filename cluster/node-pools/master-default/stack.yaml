AWSTemplateFormatVersion: 2010-09-09
Description: Kubernetes default master node pool
Metadata:
  Tags:
    InfrastructureComponent: "true"

Mappings:
  Images:
    eu-central-1:
      # Use the node pool's architecture to construct the config item name that we're using to get the AMI name.
      MachineImage: '{{ index .NodePool.ConfigItems (print "kuberuntu_image_v1_22_" .Values.InstanceInfo.Architecture) }}'

Resources:
  AutoScalingGroup:
    CreationPolicy:
      ResourceSignal:
        Count: '0'
        Timeout: PT15M
    Properties:
      HealthCheckGracePeriod: 480
      HealthCheckType: EC2
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MinSize: '{{ .NodePool.MinSize }}'
      MaxSize: '{{ .NodePool.MaxSize }}'
      Tags:
      - Key: InfrastructureComponent
        Value: true
        PropagateAtLaunch: true
      - Key: Name
        PropagateAtLaunch: true
        Value: "{{ .NodePool.Name }} ({{ .Cluster.ID }})"
      - Key: node.kubernetes.io/role
        PropagateAtLaunch: true
        Value: master
      - Key: zalando.org/pod-max-pids
        PropagateAtLaunch: true
        Value: "{{ .NodePool.ConfigItems.pod_max_pids }}"
      - Key: application
        Value: kubernetes
        PropagateAtLaunch: true
      - Key: component
        Value: control-plane
        PropagateAtLaunch: true
      VPCZoneIdentifier:
{{ with $values := .Values }}
{{ range $az := $values.availability_zones }}
        - "{{ index $values.subnets $az }}"
{{ end }}
{{ end }}
      TargetGroupARNs:
      - !ImportValue '{{ .Cluster.ID }}:master-load-balancer-nlb-target-group'
    Type: 'AWS::AutoScaling::AutoScalingGroup'
  LaunchTemplate:
    Properties:
      LaunchTemplateName: '{{.Cluster.LocalID}}-{{ .NodePool.Name }}'
      LaunchTemplateData:
{{ if .Values.supports_t2_unlimited }}
        CreditSpecification:
          CpuCredits: unlimited
{{ end }}
        BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            DeleteOnTermination: {{.NodePool.ConfigItems.ebs_root_volume_delete_on_termination}}
            VolumeSize: {{.NodePool.ConfigItems.ebs_master_root_volume_size}}
            VolumeType: gp3
        NetworkInterfaces:
        - DeviceIndex: 0
          AssociatePublicIpAddress: true
          Groups:
          - !ImportValue '{{ .Cluster.ID }}:master-security-group'
        EbsOptimized: false
        IamInstanceProfile:
          Name: !Ref AutoScalingInstanceProfile
        InstanceInitiatedShutdownBehavior: terminate
        ImageId: !FindInMap
        - Images
        - !Ref 'AWS::Region'
        - MachineImage
        InstanceType: "{{ index .NodePool.InstanceTypes 0 }}"
        UserData: "{{ .UserData }}"
    Type: 'AWS::EC2::LaunchTemplate'
  AutoScalingInstanceProfile:
    Properties:
      Path: /
      Roles:
      - !ImportValue '{{ .Cluster.ID }}:master-iam-role'
    Type: 'AWS::IAM::InstanceProfile'
  AutoscalingLifecycleHook:
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      LifecycleHookName: "kube-node-ready-lifecycle-hook"
      DefaultResult: CONTINUE
      HeartbeatTimeout: '600'
      LifecycleTransition: 'autoscaling:EC2_INSTANCE_LAUNCHING'
    Type: 'AWS::AutoScaling::LifecycleHook'
