#cloud-config
mounts:
  - [ephemeral0]
  - [swap]

write_files:
  - owner: root:root
    path: /etc/kubernetes/secrets.env
    content: |
      NODEPOOL_TAINTS={{if index .NodePool.ConfigItems "taints"}}{{.NodePool.ConfigItems.taints}}{{end}}
      NODE_LABELS=node.kubernetes.io/profile={{ .NodePool.Profile }},lifecycle-status=ready,node.kubernetes.io/distro=ubuntu{{if index .NodePool.ConfigItems "labels"}},{{.NodePool.ConfigItems.labels}}{{end}}{{if or (eq .NodePool.Profile "worker-splitaz") (eq .NodePool.Profile "worker-combined")}},asg-lifecycle-hook=true{{end}}
      NODEPOOL_NAME={{ .NodePool.Name }}
      KUBELET_ROLE=worker
      ON_DEMAND_WORKER_REPLACEMENT_STRATEGY={{ .Cluster.ConfigItems.on_demand_worker_replacement_strategy }}

{{if index .NodePool.ConfigItems "instance_storage_mount_path"}}
  - owner: root:root
    path: /etc/kuberuntu/instance-storage.env
    content: |
      MOUNT_DIRECTORY={{.NodePool.ConfigItems.instance_storage_mount_path}}
{{end}}

  - owner: root:root
    path: /etc/kuberuntu/s3-certs.env
    content: |
      S3_CERTS_BUCKET={{ .Values.S3GeneratedFilesPath }}
      AWS_DEFAULT_REGION={{ .Cluster.Region }}

  - owner: root:root
    path: /etc/kubernetes/kubeconfig
    content: |
      apiVersion: v1
      kind: Config
      clusters:
      - name: local
        cluster:
        {{- if eq .Cluster.ConfigItems.eks "true" }}
          server: {{.Cluster.ConfigItems.eks_endpoint}}
          certificate-authority-data: "{{.Cluster.ConfigItems.eks_certficate_authority_data}}"
        {{- else }}
          server: {{ .Cluster.APIServerURL }}
        {{- end}}
      users:
      - name: kubelet
        user:
          exec:
             apiVersion: client.authentication.k8s.io/v1beta1
             command: aws
             args:
               - eks
               - get-token
               - --cluster-name
               - '{{- if eq .Cluster.ConfigItems.eks "true" }}{{.Cluster.ID | eksID}}{{else}}{{.Cluster.ID}}{{end}}'
      contexts:
      - context:
          cluster: local
          user: kubelet
        name: kubelet-context
      current-context: kubelet-context

  - owner: root:root
    path: /etc/kubernetes/config/kubelet.yaml.template
    content: |
      # https://github.com/kubernetes/kubernetes/blob/v1.13.6/staging/src/k8s.io/kubelet/config/v1beta1/types.go
      apiVersion: kubelet.config.k8s.io/v1beta1
      kind: KubeletConfiguration
      cgroupDriver: systemd
      containerLogMaxSize: "50Mi"
      containerLogMaxFiles: 2
      imageGCHighThresholdPercent: {{.Cluster.ConfigItems.kubelet_image_gc_high_threshold}}
      imageGCLowThresholdPercent: {{.Cluster.ConfigItems.kubelet_image_gc_low_threshold}}
      clusterDomain: cluster.local
      cpuCFSQuota: false
{{- if eq .Cluster.ConfigItems.eks "true"}}
      hairpinMode: hairpin-veth
{{- end }}
      featureGates:
        SizeMemoryBackedVolumes: {{ .Cluster.ConfigItems.enable_size_memory_backed_volumes }}
{{- if eq .NodePool.ConfigItems.exec_probe_timeout_enabled "false" }}
        ExecProbeTimeout: false
{{- end }}
{{- if eq .Cluster.ConfigItems.eks "true"}}
        RotateKubeletServerCertificate: true
{{- end }}
      podPidsLimit: {{ .NodePool.ConfigItems.pod_max_pids }}
      cpuManagerPolicy: {{ .NodePool.ConfigItems.cpu_manager_policy }}
{{- if eq .Cluster.ConfigItems.eks "true" }}
      # TODO: Uses lower limit for simplicity need to support dynamic value
      # based on instance type.
      maxPods: 14
{{- else }}
      maxPods: {{ nodeCIDRMaxPods (parseInt64 .Cluster.ConfigItems.node_cidr_mask_size) (parseInt64 .Cluster.ConfigItems.node_max_pods_extra_capacity) }}
{{- end }}
{{- if ne .Cluster.ConfigItems.serialize_image_pulls "true" }}
      serializeImagePulls: false
{{- end }}
      healthzPort: 10248
      healthzBindAddress: "0.0.0.0"
{{- if eq .Cluster.ConfigItems.eks "true"}}
      serverTLSBootstrap: true
{{- else }}
      tlsCertFile: "/etc/kubernetes/ssl/worker.pem"
      tlsPrivateKeyFile: "/etc/kubernetes/ssl/worker-key.pem"
{{- end }}
      eventRecordQPS: 50
      eventBurst: 50
      kubeAPIQPS: 50
      kubeAPIBurst: 50
      systemReserved:
        cpu: "{{ .Cluster.ConfigItems.kubelet_system_reserved_cpu }}"
        memory: "{{ .Cluster.ConfigItems.kubelet_system_reserved_memory }}"
      kubeReserved:
        cpu: "{{ .Cluster.ConfigItems.kubelet_kube_reserved_cpu }}"
        memory: "{{ .Cluster.ConfigItems.kubelet_kube_reserved_memory }}"
      allowedUnsafeSysctls:
{{- range $sysctl := split .Cluster.ConfigItems.allowed_unsafe_sysctls "," }}
        - {{$sysctl}}
{{- end }}
      authentication:
        anonymous:
          enabled: false
        webhook:
          enabled: true
          cacheTTL: "2m"
        x509:
          clientCAFile: "/etc/kubernetes/ssl/ca.pem"
      authorization:
        mode: Webhook
        webhook:
          cacheAuthorizedTTL: "5m"
          cacheUnauthorizedTTL: "30s"
      protectKernelDefaults: true
      # variables are replaced on instance start-up.
      providerID: __PROVIDER_ID__
      clusterDNS: [__CLUSTER_DNS__]

{{- if and .Cluster.ConfigItems.vm_dirty_background_bytes .Cluster.ConfigItems.vm_dirty_bytes }}
  - owner: root:root
    path: /etc/sysctl.d/03-vm-dirty-ratios.conf
    content: |
      vm.dirty_background_bytes = {{ .Cluster.ConfigItems.vm_dirty_background_bytes }}
      vm.dirty_bytes = {{ .Cluster.ConfigItems.vm_dirty_bytes }}
{{- end}}
{{- if .NodePool.ConfigItems.sysctl_settings}}
  - owner: root:root
    path: /etc/sysctl.d/99-custom-sysctl-settings.conf
    content: |
      {{- range $i, $cfgs := split .NodePool.ConfigItems.sysctl_settings ","}}
      {{- $cfg := split $cfgs "="}}
      {{index $cfg 0}} = {{index $cfg 1}}
      {{- end}}
{{- end}}

{{- if ne .Cluster.ConfigItems.eks "true" }}
  - owner: root:root
    path: /etc/kubernetes/cni/net.d/10-flannel.conflist
    content: |
      {
        "name": "podnet",
        "cniVersion": "0.3.1",
        "plugins": [
          {
            "type": "flannel",
            "delegate": {
              "isDefaultGateway": true,
              "hairpinMode": true
            }
          }
        ]
      }
{{- end}}
