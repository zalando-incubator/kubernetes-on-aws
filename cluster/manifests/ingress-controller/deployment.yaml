apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-ingress-aws-controller
  namespace: kube-system
  labels:
    application: kube-ingress-aws-controller
    version: v0.11.3
spec:
  replicas: 1
  selector:
    matchLabels:
      application: kube-ingress-aws-controller
  template:
    metadata:
      labels:
        application: kube-ingress-aws-controller
        version: v0.11.3
{{ if eq .Cluster.ConfigItems.teapot_admission_controller_service_account_iam "false" }}
{{ if eq .ConfigItems.kube_aws_iam_controller_kube_system_enable "false"}}
      annotations:
        iam.amazonaws.com/role: "{{ .LocalID }}-app-ingr-ctrl"
{{ end }}
{{ end }}
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
{{- if eq .Cluster.ConfigItems.system_pods_critical "true" }}
      priorityClassName: system-cluster-critical
{{- end }}
      serviceAccountName: kube-ingress-aws-controller
      containers:
      - name: controller
        image: registry.opensource.zalan.do/teapot/kube-ingress-aws-controller:v0.11.3
        args:
        - --stack-termination-protection
        - --ssl-policy={{ .ConfigItems.kube_aws_ingress_controller_ssl_policy }}
        - --idle-connection-timeout={{ .ConfigItems.kube_aws_ingress_controller_idle_timeout }}
        {{ if eq .ConfigItems.kube_aws_ingress_controller_nlb_cross_zone "true" }}
        - --nlb-cross-zone
        - --cluster-local-domain=cluster.local
        {{ end }}
        env:
        - name: CUSTOM_FILTERS
          value: "tag:kubernetes.io/cluster/{{ .Cluster.ID }}=owned tag:node.kubernetes.io/role=worker tag:zalando.org/ingress-enabled=true"
        - name: AWS_REGION
          value: {{ .Region }}
{{ if eq .Cluster.ConfigItems.teapot_admission_controller_service_account_iam "false" }}
{{ if eq .ConfigItems.kube_aws_iam_controller_kube_system_enable "true"}}
        # must be set for the AWS SDK/AWS CLI to find the credentials file.
        - name: AWS_SHARED_CREDENTIALS_FILE # used by golang SDK
          value: /meta/aws-iam/credentials.process
{{ end }}
{{ end }}
{{ if eq .Cluster.ConfigItems.teapot_admission_controller_service_account_iam "false" }}
{{ if eq .ConfigItems.kube_aws_iam_controller_kube_system_enable "true"}}
        volumeMounts:
        - name: aws-iam-credentials
          mountPath: /meta/aws-iam
          readOnly: true
{{ end }}
{{ end }}
        resources:
          limits:
            cpu: 50m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 100Mi
{{ if eq .Cluster.ConfigItems.teapot_admission_controller_service_account_iam "false" }}
{{ if eq .ConfigItems.kube_aws_iam_controller_kube_system_enable "true"}}
      volumes:
      - name: aws-iam-credentials
        secret:
          secretName: kube-ingress-aws-controller-aws-iam-credentials
{{ end }}
{{ end }}
