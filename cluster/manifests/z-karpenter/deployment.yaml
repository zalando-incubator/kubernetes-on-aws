{{ if eq .Cluster.ConfigItems.karpenter_pools_enabled "true"}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: karpenter
  namespace: kube-system
  labels:
    application: kubernetes
    component: karpenter
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      deployment: karpenter
  template:
    metadata:
      labels:
        deployment: karpenter
        application: kubernetes
        component: karpenter
      annotations:
        logging/destination: "{{.Cluster.ConfigItems.log_destination_infra}}"
    spec:
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      dnsPolicy: Default
      serviceAccountName: karpenter
      securityContext:
        fsGroup: 1000
      priorityClassName: "{{ .Cluster.ConfigItems.system_priority_class }}"
      tolerations:
      - key: node.kubernetes.io/role
        value: master
        effect: NoSchedule
      containers:
        - name: controller
          image: "container-registry.zalando.net/teapot/karpenter-controller:v0.27.3-main-9"
          env:
            - name: KUBERNETES_MIN_VERSION
              value: "1.22.0-0"
            - name: KARPENTER_SERVICE
              value: karpenter
            - name: WEBHOOK_PORT
              value: "8443"
            - name: METRICS_PORT
              value: "8080"
            - name: HEALTH_PROBE_PORT
              value: "8081"
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MEMORY_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: controller
                  divisor: "0"
                  resource: limits.memory
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: http
              containerPort: 8081
              protocol: TCP
            - name: https-webhook
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 30
            timeoutSeconds: 30
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            timeoutSeconds: 30
            httpGet:
              path: /readyz
              port: http
          resources:
            requests:
              cpu: "{{ .Cluster.ConfigItems.karpenter_controller_cpu }}"
              memory: "{{ .Cluster.ConfigItems.karpenter_controller_memory }}"
            limits:
              cpu: "{{ .Cluster.ConfigItems.karpenter_controller_cpu }}"
              memory: "{{ .Cluster.ConfigItems.karpenter_controller_memory }}"
{{ end }}
