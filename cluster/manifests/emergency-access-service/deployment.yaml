{{ if eq .Environment "production" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emergency-access-service
  namespace: kube-system
  labels:
    application: emergency-access-service
    version: master-65
spec:
  replicas: 1
  selector:
    matchLabels:
      application: emergency-access-service
  template:
    metadata:
      labels:
        application: emergency-access-service
        version: master-65
      annotations:
        kubernetes-log-watcher/scalyr-parser: |
          [{"container": "emergency-access-service", "parser": "json-structured-log"}]
        iam.amazonaws.com/role: {{.LocalID}}-emergency-access-service
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      priorityClassName: system-cluster-critical
      serviceAccountName: system
      containers:
      - name: apiserver-proxy
        image: registry.opensource.zalan.do/teapot/etcd-proxy:master-3
        command:
        - /bin/sh
        args:
        - -c
        - "exec /etcd-proxy --listen-address 127.0.0.1:333 $KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT"
        resources:
          requests:
            cpu: 25m
            memory: 25Mi
          limits:
            cpu: 25m
            memory: 25Mi
      - name: emergency-access-service
        image: "pierone.stups.zalan.do/teapot/emergency-access-service:master-66"
        args:
        - --insecure-http
        - --community={{ .Owner }}
        - --cluster-id={{ .ID }}
        - --teams-api-url=https://teams.auth.zalando.com
        # TODO(mlarsen): Rename this flag to tokeninfo-url to reflect that it's
        # not the OAuth2 token URL.
        - --token-url=https://info.services.auth.zalando.com/oauth2/tokeninfo
        # enable audittrail reporting
        - --audittrail-url=https://audittrail.cloud.zalando.com
        - --jira-url=https://techjira.zalando.net
        - --environment={{ .Environment }}
        - --s3-bucket-name=zalando-audittrail-{{accountID .InfrastructureAccount}}-{{.LocalID}}
        env:
        - name: KUBERNETES_SERVICE_HOST
          value: "127.0.0.1"
        - name: KUBERNETES_SERVICE_PORT
          value: "333"
        - name: CONFIGMAP_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AWS_REGION
          value: {{.Region}}
        - name: OPENTRACING_LIGHTSTEP_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: "emergency-access-service-secrets"
              key: opentracing-lightstep-access-token
        - name: OPENTRACING_LIGHTSTEP_COLLECTOR_HOST
          value: "tracing.stups.zalan.do"
        - name: OPENTRACING_LIGHTSTEP_COLLECTOR_PORT
          value: "8444"
        - name: OPENTRACING_LIGHTSTEP_COMPONENT_NAME
          value: "emergency-access-service"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: platform-iam-credentials
          mountPath: /meta/credentials
          readOnly: true
        - name: secrets
          mountPath: /meta/secrets
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
          limits:
            cpu: 50m
            memory: 100Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
      volumes:
      - name: platform-iam-credentials
        secret:
          secretName: "emergency-access-service"
      - name: secrets
        secret:
          secretName: "emergency-access-service-secrets"
{{ end }}
