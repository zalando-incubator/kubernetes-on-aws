apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-aws-iam-controller
  namespace: kube-system
  labels:
    application: kubernetes
    component: aws-iam-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: kube-aws-iam-controller
  template:
    metadata:
      labels:
        application: kubernetes
        component: aws-iam-controller
        deployment: kube-aws-iam-controller
      annotations:
        logging/destination: "{{.Cluster.ConfigItems.log_destination_infra}}"
    spec:
      serviceAccountName: kube-aws-iam-controller
      priorityClassName: "{{ .Cluster.ConfigItems.system_priority_class }}"
      # running with hostNetwork to bypass metadata service block from pod
      # network.
      hostNetwork: true
      containers:
      - name: kube-aws-iam-controller
        image: container-registry.zalando.net/teapot/kube-aws-iam-controller:v0.3.0-33-g6df0443
        env:
        - name: AWS_DEFAULT_REGION
          value: "{{.Cluster.Region}}"
        args:
        - --debug
{{- if ne .Cluster.Provider "zalando-eks" }}
        - "--assume-role={{.Cluster.LocalID}}-worker"
{{- end }}
        resources:
          limits:
            cpu: "{{.Cluster.ConfigItems.kube_aws_iam_controller_cpu}}"
            memory: "{{.Cluster.ConfigItems.kube_aws_iam_controller_mem}}"
          requests:
            cpu: "{{.Cluster.ConfigItems.kube_aws_iam_controller_cpu}}"
            memory: "{{.Cluster.ConfigItems.kube_aws_iam_controller_mem}}"
{{- if eq .Cluster.Provider "zalando-eks"}}
      nodeSelector:
        dedicated: cluster-seed
      tolerations:
      - key: dedicated
        value: cluster-seed
        effect: NoSchedule
{{- else}}
      nodeSelector:
        node.kubernetes.io/role: master
      tolerations:
      - key: node.kubernetes.io/role
        value: master
        effect: NoSchedule
{{- end}}
