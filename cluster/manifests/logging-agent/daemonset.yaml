{{ if eq .ConfigItems.logging_agent_enabled "true" }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: logging-agent
  namespace: {{if eq .ConfigItems.logging_agent_in_visibility "true"}}visibility{{else}}kube-system{{end}}
  labels:
    application: logging-agent
    version: v0.30
    component: logging
spec:
  selector:
    matchLabels:
      application: logging-agent
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: logging-agent
      labels:
        application: logging-agent
        version: v0.30
        component: logging
      annotations:
        iam.amazonaws.com/role: {{.LocalID}}-app-logging-agent
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      priorityClassName: {{if eq .ConfigItems.logging_agent_in_visibility "true"}}visibility-logging{{else}}system-node-critical{{end}}
      serviceAccountName: logging-agent
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      initContainers:
      - name: init-scalyr-config
        image: registry.opensource.zalan.do/stups/alpine:3.7.0-1
        command: ["sh", "-c"]
        args:
        - |
            SCALYR_CONFIG_PATH="/mnt/scalyr/agent.json"
            IMPORT_VARS="WATCHER_SCALYR_API_KEY WATCHER_CLUSTER_ID WATCHER_SCALYR_SERVER"
            if [ ! -f $SCALYR_CONFIG_PATH ]; then
              echo '{
                "import_vars": ["WATCHER_SCALYR_API_KEY", "WATCHER_CLUSTER_ID", "WATCHER_SCALYR_SERVER"],
                "server_attributes": {"serverHost": "$WATCHER_CLUSTER_ID"},
                "implicit_agent_process_metrics_monitor": false,
                "implicit_metric_monitor": false,
                "api_key": "$WATCHER_SCALYR_API_KEY",
                "monitors": [],
                "logs": []
                ' > $SCALYR_CONFIG_PATH;
                if [ -n "$WATCHER_SCALYR_SERVER" ]; then
                  IMPORT_VARS="$IMPORT_VARS WATCHER_SCALYR_SERVER"
                  echo ',"scalyr_server": "$WATCHER_SCALYR_SERVER"' >> $SCALYR_CONFIG_PATH
                fi
                echo ', "import_vars":[' >> $SCALYR_CONFIG_PATH
                ALL_IMPORT_VARS=`for i in $IMPORT_VARS; do echo "\"$i\","; done`
                echo $ALL_IMPORT_VARS | sed 's/",$/"/' >> $SCALYR_CONFIG_PATH
                echo ' ]' >> $SCALYR_CONFIG_PATH
                echo "}" >> $SCALYR_CONFIG_PATH
                echo 'Updated agent.json to inital configuration';
            fi && cat $SCALYR_CONFIG_PATH;
            test -f /mnt/scalyr-checkpoint/checkpoints.json && ls -lah /mnt/scalyr-checkpoint/checkpoints.json && cat /mnt/scalyr-checkpoint/checkpoints.json || true;
        env:
        - name: WATCHER_SCALYR_API_KEY
          valueFrom:
            secretKeyRef:
              name: logging-agent
              key: scalyr-access-key
        - name: WATCHER_CLUSTER_ID
          value: "{{ .ID }}"
        - name: WATCHER_SCALYR_SERVER
          value: "{{ index .ConfigItems "scalyr_server" }}"

        volumeMounts:
        - name: scalyr-config
          mountPath: /mnt/scalyr
        - name: scalyr-checkpoint
          mountPath: /mnt/scalyr-checkpoint
      containers:
      - name: log-watcher
        image: registry.opensource.zalan.do/logging/kubernetes-log-watcher:0.30
        env:
        - name: CLUSTER_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CLUSTER_ENVIRONMENT
          value: "{{ .Environment }}"
        - name: CLUSTER_ALIAS
          value: "{{ .Alias }}"
        - name: WATCHER_AGENTS
          value: scalyr,symlinker
        - name: WATCHER_SCALYR_API_KEY
          valueFrom:
            secretKeyRef:
              name: logging-agent
              key: scalyr-access-key
        - name: WATCHER_SCALYR_SERVER
          value: "{{ index .ConfigItems "scalyr_server" }}"
        - name: WATCHER_CLUSTER_ID
          value: "{{ .ID }}"
        - name: WATCHER_SCALYR_DEST_PATH
          value: /mnt/scalyr-logs
        - name: WATCHER_SCALYR_CONFIG_PATH
          value: /mnt/scalyr-config/agent.json
        - name: WATCHER_SCALYR_JOURNALD
          value: "true"
        - name: WATCHER_SCALYR_JOURNALD_WRITE_RATE
          value: "200000"
        - name: WATCHER_SCALYR_JOURNALD_WRITE_BURST
          value: "3000000"
        - name: WATCHER_SYMLINK_DIR
          value: /mnt/fluentd-logs

        resources:
          limits:
            cpu: "{{ .ConfigItems.logging_watcher_cpu }}"
            memory: "{{ .ConfigItems.logging_watcher_mem }}"
          requests:
            cpu: "{{ .ConfigItems.logging_watcher_cpu }}"
            memory: "{{ .ConfigItems.logging_watcher_mem }}"

        volumeMounts:
        - name: containerlogs
          mountPath: /mnt/containers
          readOnly: true
        - name: scalyr-logs
          mountPath: /mnt/scalyr-logs
          readOnly: false
        - name: scalyr-config
          mountPath: /mnt/scalyr-config
        - name: fluentd-logs
          mountPath: /mnt/fluentd-logs

      - name: scalyr-agent

        image: registry.opensource.zalan.do/eagleeye/scalyr-agent:0.5

        env:
        # Note: added for scalyr-config-base, but not needed by the scalyr-agent itself.
        - name: WATCHER_SCALYR_API_KEY
          valueFrom:
            secretKeyRef:
              name: logging-agent
              key: scalyr-access-key
        - name: WATCHER_SCALYR_SERVER
          value: "{{ index .ConfigItems "scalyr_server" }}"
        - name: WATCHER_CLUSTER_ID
          value: "{{ .ID }}"

        volumeMounts:
        - name: containerlogs
          mountPath: /mnt/containers
          readOnly: true
        - name: scalyr-logs
          mountPath: /mnt/scalyr-logs
          readOnly: true
        - name: scalyr-checkpoint
          mountPath: /var/lib/scalyr-agent-2
        - name: scalyr-config
          mountPath: /etc/scalyr-agent-2/
          readOnly: true
        - name: journal
          mountPath: /var/log/journal
          readOnly: true

        resources:
          limits:
            cpu: "{{ .ConfigItems.logging_scalyr_cpu }}"
            memory: "{{ .ConfigItems.logging_scalyr_mem }}"
          requests:
            cpu: "{{ .ConfigItems.logging_scalyr_cpu }}"
            memory: "{{ .ConfigItems.logging_scalyr_mem }}"

      - name: fluentd

        image: pierone.stups.zalan.do/logging/fluentd:v1.5.2-zal-master-13

        volumeMounts:
        - name: containerlogs
          mountPath: /mnt/containers
          readOnly: true
        - name: fluentd-logs
          mountPath: /mnt/fluentd-logs
          readOnly: true
        - name: fluentd-buffer
          mountPath: /mnt/buffer
        - name: fluentd-posfiles
          mountPath: /mnt/posfiles
        - name: fluentd-config
          mountPath: /fluentd/etc/
          readOnly: true
        - name: journal
          mountPath: /var/log/journal
          readOnly: true

        ports:
          - containerPort: 9110

        resources:
          limits:
            cpu: "{{ .ConfigItems.logging_fluentd_cpu }}"
            memory: "{{ .ConfigItems.logging_fluentd_mem }}"
          requests:
            cpu: "{{ .ConfigItems.logging_fluentd_cpu }}"
            memory: "{{ .ConfigItems.logging_fluentd_mem }}"

      volumes:
      - name: containerlogs
        hostPath:
          path: /var/lib/docker/containers

      - name: journal
        hostPath:
          path: /var/log/journal

      - name: scalyr-checkpoint
        hostPath:
          path: /var/lib/scalyr-agent

      - name: scalyr-config
        hostPath:
          path: /etc/scalyr-agent

      - name: scalyr-logs
        hostPath:
          path: /var/log/scalyr-agent

      - name: fluentd-config
        configMap:
          name: fluentd-config

      - name: fluentd-logs
        emptyDir: {}

      - name: fluentd-buffer
        emptyDir: {}

      - name: fluentd-posfiles
        hostPath:
          path: /var/lib/fluentd
{{ end }}
