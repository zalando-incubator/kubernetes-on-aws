{{ if eq .Cluster.ConfigItems.downscaler_enabled "true" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-downscaler
  namespace: kube-system
  labels:
    application: kubernetes
    component: kube-downscaler
    version: v20.4.1
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: kube-downscaler
  template:
    metadata:
      labels:
        deployment: kube-downscaler
        application: kubernetes
        component: kube-downscaler
        version: v20.4.1
      annotations:
        logging/destination: "{{.Cluster.ConfigItems.log_destination_infra}}"
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      serviceAccountName: kube-downscaler
      containers:
      - name: downscaler
        # see https://github.com/hjacobs/kube-downscaler/releases
        image: container-registry.zalando.net/teapot/kube-downscaler:22.7.1-master-13
        args:
          - --interval=30
          - --exclude-namespaces=kube-system,visibility,tracing
          # do not downscale ourselves, also keep Postgres Operator so excluded DBs can be managed
          - --exclude-deployments=kube-downscaler,postgres-operator
          - "--default-uptime={{ .ConfigItems.downscaler_default_uptime }}"
          - "--default-downtime={{ .ConfigItems.downscaler_default_downtime }}"
          - --include-resources=deployments,stacks
          - --deployment-time-annotation=deployment-time
        resources:
          limits:
            cpu: 5m
            memory: 4Gi
          requests:
            cpu: 5m
            memory: 4Gi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
{{ end }}
