apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: kube-system
  labels:
    application: kube-state-metrics
    version: v2.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      application: kube-state-metrics
  template:
    metadata:
      labels:
        application: kube-state-metrics
        version: v2.1.0
      annotations:
        logging/destination: "{{.Cluster.ConfigItems.log_destination_infra}}"
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      serviceAccountName: kube-state-metrics
      containers:
      - name: kube-state-metrics
        image: registry.opensource.zalan.do/teapot/kube-state-metrics:v2.1.0
        args:
        - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments,verticalpodautoscalers
        - --metric-labels-allowlist=pods=[application,component],nodes=[topology.kubernetes.io/zone]
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        - containerPort: 8081
          name: telemetry
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "{{.ConfigItems.kube_state_metrics_cpu}}"
            memory: "{{.ConfigItems.kube_state_metrics_mem}}"
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          capabilities:
            drop: ["ALL"]
      securityContext:
        fsGroup: 65534
