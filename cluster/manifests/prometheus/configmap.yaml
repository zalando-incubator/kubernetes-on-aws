apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    application: prometheus
  name: prometheus-conf
  namespace: kube-system
data:
  prometheus.yml: |-
    global:
      scrape_interval: 15s
      external_labels:
        monitor: 'skipper-ingress'
    scrape_configs:
    - job_name: 'kubernetes-service-endpoints'
      scheme: http
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      # Look for the Prometheus annotations and scrape based on those
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: (.+)(?::\d+);(\d+)
        replacement: $1:$2
      # Add pod information
      - action: replace
        source_labels: ['__meta_kubernetes_pod_ip']
        target_label: pod_ip
      - action: replace
        source_labels: ['__meta_kubernetes_namespace']
        target_label: namespace
      - action: replace
        source_labels: ['__meta_kubernetes_pod_label_application']
        target_label: application
      - action: replace
        source_labels: ['__meta_kubernetes_pod_name']
        target_label: pod_name
      - action: replace
        source_labels: ['__meta_kubernetes_pod_node_name']
        target_label: node_name
    - job_name: 'kubelet-cadvisor'
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - source_labels: [__meta_kubernetes_node_address_InternalIP]
        target_label: __address__
        regex: (.*)
        replacement: $1:4194

