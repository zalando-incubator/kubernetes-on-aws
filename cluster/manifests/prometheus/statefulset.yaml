apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    pdb-controller.zalando.org/non-ready-ttl: "5m"
  labels:
    application: kubernetes
    component: prometheus
    version: v2.41.0
{{- if ne .ConfigItems.prometheus_csi_ebs "true" }}
  name: prometheus
{{- else }}
  name: prometheus-csi
{{- end }}
  namespace: kube-system
spec:
  replicas: 2
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      statefulset: prometheus
  serviceName: prometheus
  template:
    metadata:
      labels:
        statefulset: prometheus
        application: kubernetes
        component: prometheus
        version: v2.41.0
      annotations:
        config/hash: {{"configmap.yaml" | manifestHash}}
        logging/destination: "{{.Cluster.ConfigItems.log_destination_infra}}"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: prometheus
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      initContainers:
      - name: generate-config
        image: container-registry.zalando.net/library/alpine-3:3-20230102
        command:
        - /bin/sh
        args:
        - -c
        - sed s/'@@POD_NAME@@'/${POD_NAME}/g /etc/prometheus/prometheus.yml > /prometheus/prometheus.yaml ; cp /etc/prometheus/prometheus.rules.yml /prometheus/prometheus.rules.yaml
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          limits:
            cpu: 1m
            memory: 128Mi
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /etc/prometheus
        - name: prometheus-storage-volume
          mountPath: /prometheus
      containers:
      - name: prometheus
        image: container-registry.zalando.net/teapot/prometheus:v2.41.0-master-43
        args:
        - "--config.file=/prometheus/prometheus.yaml"
        - "--storage.tsdb.path=/prometheus/"
        - "--storage.tsdb.retention.size={{ .ConfigItems.prometheus_retention_size }}"
        - "--storage.tsdb.retention.time={{ .ConfigItems.prometheus_retention_time }}"
        - "--storage.tsdb.wal-compression"
        - "--storage.tsdb.min-block-duration=30m"
{{if eq .Cluster.ConfigItems.network_monitoring_separate_prometheus "true"}}
        - "--web.enable-remote-write-receiver"
{{end}}
        ports:
        - name: ingress-port
          containerPort: 9090
          protocol: TCP
        resources:
          limits:
            cpu: {{.ConfigItems.prometheus_cpu}}
            memory: {{.ConfigItems.prometheus_mem}}
          requests:
            cpu: {{.ConfigItems.prometheus_cpu}}
            memory: {{.ConfigItems.prometheus_mem}}
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          timeoutSeconds: 5
          # ensure that we have at least two minutes of metrics before marking ourselves as ready
          periodSeconds: 5
          successThreshold: 26
        volumeMounts:
        - name: prometheus-storage-volume
          mountPath: /prometheus
{{- if ne .ConfigItems.prometheus_remote_write "disabled" }}
        - name: prometheus-credentials
          mountPath: /meta/credentials
{{- end }}
        securityContext:
          allowPrivilegeEscalation: false
      volumes:
      - name: prometheus-config-volume
        configMap:
          defaultMode: 420
          name: prometheus-conf
{{- if ne .ConfigItems.prometheus_remote_write "disabled" }}
      - name: prometheus-credentials
        secret:
          secretName: prometheus-credentials
{{- end }}
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
      terminationGracePeriodSeconds: 60
  volumeClaimTemplates:
  - metadata:
      name: prometheus-storage-volume
    spec:
{{- if ne .ConfigItems.prometheus_csi_ebs "true" }}
      storageClassName: standard
{{- else }}
      storageClassName: ebs-sc
{{- end }}
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: 50Gi
