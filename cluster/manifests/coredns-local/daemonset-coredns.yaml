apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: coredns
  namespace: kube-system
  labels:
    application: kubernetes
    component: coredns
spec:
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      daemonset: coredns
  template:
    metadata:
      labels:
        daemonset: coredns
        application: kubernetes
        component: coredns
        instance: node-dns
      annotations:
        logging/destination: "{{.Cluster.ConfigItems.log_destination_infra}}"
        prometheus.io/path: /metrics
        prometheus.io/scrape: "true"
        prometheus.io/port: "9153"
    spec:
      initContainers:
      - name: ensure-apiserver
        image: container-registry.zalando.net/teapot/ensure-apiserver:master-6
        resources:
          requests:
            cpu: 1m
            memory: 50Mi
            ephemeral-storage: 256Mi
          limits:
            cpu: 1m
            memory: 50Mi
      containers:
{{ if eq .Cluster.ConfigItems.dns_cache "unbound" }}
      - name: unbound
        image: container-registry.zalando.net/teapot/unbound:1.19.2-master-9
        args:
        - -d
        - -c
        - /etc/unbound/unbound.conf
        ports:
        - containerPort: 53
          name: dns-udp
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
{{- if eq .Cluster.ConfigItems.expirimental_dns_unbound_liveness_probe "true" }}
        livenessProbe:
          exec:
            command:
            - dig
            - "+short"
            - "@127.0.0.1"
            - "kubernetes.default.svc.cluster.local"
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
{{- end }}
        resources:
          requests:
            ephemeral-storage: 256Mi
          limits:
            cpu: {{.Cluster.ConfigItems.dns_unbound_cpu}}
            memory: {{.Cluster.ConfigItems.dns_unbound_mem}}
        volumeMounts:
        - mountPath: /etc/unbound/unbound.conf
          name: config-volume
          readOnly: true
          subPath: unbound.conf
      - name: unbound-telemetry
        image: container-registry.zalando.net/teapot/unbound-telemetry:master-5
        args:
        - tcp
        - --bind=0.0.0.0:9054
        ports:
        - name: metrics
          containerPort: 9054
          protocol: TCP
        resources:
          requests:
            ephemeral-storage: 256Mi
          limits:
            cpu: {{.Cluster.ConfigItems.dns_unbound_telemetry_cpu}}
            memory: {{.Cluster.ConfigItems.dns_unbound_telemetry_mem}}
{{ end }}
{{ if eq .Cluster.ConfigItems.dns_cache "dnsmasq" }}
      - name: dnsmasq
        image: container-registry.zalando.net/teapot/k8s-dns-dnsmasq-nanny:1.23.1-master-17
        securityContext:
          privileged: true
        livenessProbe:
          httpGet:
            path: /healthcheck/dnsmasq
            port: 9054
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        args:
        - -v=2
        - -logtostderr
        - -configDir=/etc/k8s/dns/dnsmasq-nanny
        - -restartDnsmasq=true
        - --
        - --no-resolv
        - --keep-in-foreground
        - --log-facility=-
        - --cache-size=50000
        - --dns-forward-max=500
        - --neg-ttl=60
        # send requests to the last server first, only fallback to the previous ones if it's unreachable
        - --strict-order
        - --server=10.5.0.11#53
        - --server=127.0.0.1#9254
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        resources:
          requests:
            ephemeral-storage: 256Mi
          limits:
            cpu: {{.Cluster.ConfigItems.dns_dnsmasq_cpu}}
            memory: {{.Cluster.ConfigItems.dns_dnsmasq_mem}}
      - name: sidecar
        image: container-registry.zalando.net/teapot/k8s-dns-sidecar:1.23.1-master-17
        securityContext:
          privileged: true
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9054
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        args:
        - --v=2
        - --logtostderr
        - --probe=dnsmasq,127.0.0.1:9254,ec2.amazonaws.com,5,A
        - --prometheus-port=9054
        ports:
        - containerPort: 9054
          name: metrics
          protocol: TCP
        resources:
          requests:
            ephemeral-storage: 256Mi
          limits:
            cpu: {{.Cluster.ConfigItems.dns_dnsmasq_sidecar_cpu}}
            memory: {{.Cluster.ConfigItems.dns_dnsmasq_sidecar_mem}}
{{ end }}
      - name: coredns
        image: container-registry.zalando.net/teapot/coredns:1.11.3-master-24
        args: [ "-conf", "/etc/coredns/Corefile" ]
        env:
        - name: ZONE
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['topology.kubernetes.io/zone']
        volumeMounts:
        - name: config-volume
          mountPath: /etc/coredns
        ports:
        - containerPort: 9254
          name: dns
          protocol: UDP
        - containerPort: 9254
          name: dns-tcp
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: 9154
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: 9155
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            ephemeral-storage: 256Mi
          limits:
            cpu: {{.Cluster.ConfigItems.dns_coredns_cpu}}
            memory: {{.Cluster.ConfigItems.dns_coredns_mem}}
      priorityClassName: system-node-critical
      serviceAccountName: coredns
      hostNetwork: true
      dnsPolicy: Default
      tolerations:
      - key: node.kubernetes.io/role
        value: master
        effect: NoSchedule
      - key: node.kubernetes.io/not-ready
        operator: Exists
      - key: dedicated
        operator: Exists
      - key: aws.amazon.com/spot
        operator: Exists
      - key: zalando.org/node-not-ready
        operator: Exists
        effect: NoSchedule
      - key: nvidia.com/gpu
        value: present
        effect: NoSchedule
      # these are tolerated in the unlikely case an already scheduled daemonset
      # pod is deleted and needs to be rescheduled on a to be terminated node.
      - key: decommission-pending
        operator: Exists
      - key: karpenter.sh/disruption
        operator: Exists
      - key: DeletionCandidateOfClusterAutoscaler
        operator: Exists
      - key: ToBeDeletedByClusterAutoscaler
        operator: Exists
      - key: BeingDeletedByClusterAutoscaler
        operator: Exists
      volumes:
      - name: config-volume
        configMap:
          name: coredns-local
          items:
          - key: Corefile
            path: Corefile
          - key: unbound.conf
            path: unbound.conf
