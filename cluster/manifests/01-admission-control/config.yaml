apiVersion: v1
kind: ConfigMap
metadata:
  name: teapot-admission-controller
  namespace: kube-system
data:
  daemonset.reserved.cpu: "{{ .Cluster.ConfigItems.teapot_admission_controller_daemonset_reserved_cpu }}"
  daemonset.reserved.memory: "{{ .Cluster.ConfigItems.teapot_admission_controller_daemonset_reserved_memory }}"

  pod.container-resource-control.min-memory-request: "25Mi"
  pod.container-resource-control.default-cpu-request: "{{ .Cluster.ConfigItems.teapot_admission_controller_default_cpu_request }}"
  pod.container-resource-control.default-memory-request: "{{ .Cluster.ConfigItems.teapot_admission_controller_default_memory_request }}"
  pod.container-resource-control.enable: "{{ .Cluster.ConfigItems.teapot_admission_controller_process_resources }}"
  pod.ignore-namespaces: "{{ .Cluster.ConfigItems.teapot_admission_controller_ignore_namespaces }}"
  pod.default.dns-ndots: "{{ .Cluster.ConfigItems.teapot_admission_controller_ndots }}"
  pod.parent-resource-hash.enable: "{{ .Cluster.ConfigItems.teapot_admission_controller_parent_resource_hash }}"
{{- if or (eq .Cluster.ConfigItems.teapot_admission_controller_service_account_iam "true") (eq .Cluster.ConfigItems.teapot_admission_controller_service_account_iam_userdata "true") }}
  pod.service-account-iam.enable: "true"
  pod.service-account-iam.base-aws-account-id: "{{ accountID .Cluster.InfrastructureAccount }}"
{{- end }}
{{- if eq .Cluster.ConfigItems.teapot_admission_controller_inject_aws_waiter "true" }}
  pod.aws-waiter.image: "registry.opensource.zalan.do/automata/aws-credentials-waiter:master-10"
{{- end }}
  pod.env-inject.enable: "{{ .Cluster.ConfigItems.teapot_admission_controller_inject_environment_variables }}"
  pod.env-inject.variable._PLATFORM_ACCOUNT: "{{ .Cluster.Alias }}"
  pod.env-inject.variable._PLATFORM_CLUSTER_ID: "{{ .Cluster.ID }}"
  pod.env-inject.variable._PLATFORM_OPENTRACING_TAG_ACCOUNT: "{{ .Cluster.Alias }}"
  pod.env-inject.variable._PLATFORM_OPENTRACING_LIGHTSTEP_COLLECTOR_PORT: "8443"
  pod.env-inject.variable._PLATFORM_OPENTRACING_LIGHTSTEP_COLLECTOR_HOST: "{{ .Cluster.ConfigItems.tracing_collector_host }}"
  pod.env-inject.variable._PLATFORM_OPENTRACING_LIGHTSTEP_ACCESS_TOKEN: "{{ .Cluster.ConfigItems.lightstep_token }}"
{{- if eq .Cluster.Environment "e2e" }}
  pod.env-inject.variable._PLATFORM_E2E: "injected"
{{- end }}

  podfactory.container-resource-check.enable: "{{ .Cluster.ConfigItems.teapot_admission_controller_validate_pod_template_resources }}"
  podfactory.application-label-check.enable: "{{ .Cluster.ConfigItems.teapot_admission_controller_validate_application_label }}"
  podfactory.application-label-check.minimum-creation-time: "{{ .Cluster.ConfigItems.teapot_admission_controller_application_min_creation_time }}"

  deployment.default.rolling-update-max-surge: "{{ .Cluster.ConfigItems.teapot_admission_controller_deployment_default_max_surge }}"
  deployment.default.rolling-update-max-unavailable: "{{ .Cluster.ConfigItems.teapot_admission_controller_deployment_default_max_unavailable }}"

  crd.resource-delete-protection.enable: "{{ .Cluster.ConfigItems.teapot_admission_controller_crd_ensure_no_resources_on_delete }}"

  priorityclass.preemption.enable: "{{ .Cluster.ConfigItems.teapot_admission_controller_preemption_enabled }}"

  postgresql.delete-protection.enable: "{{ .Cluster.ConfigItems.teapot_admission_controller_postgresql_delete_protection_enabled }}"

  namespace.delete-protection.enable: "{{ .Cluster.ConfigItems.teapot_admission_controller_namespace_delete_protection_enabled }}"

  pod.automatic-topology-spread.mode: "{{ .Cluster.ConfigItems.teapot_admission_controller_topology_spread }}"
{{- range $group, $enabled := zoneDistributedNodePoolGroups .Cluster.NodePools }}
{{- if eq $group "" }}
  pod.automatic-topology-spread.pools.default: "{{ $enabled }}"
{{- else }}
  pod.automatic-topology-spread.pools.dedicated.{{$group}}: "{{ $enabled }}"
{{- end }}
{{- end}}
