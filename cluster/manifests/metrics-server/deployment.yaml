apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-server
  namespace: kube-system
  labels:
    application: kubernetes
    component: metrics-server
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: metrics-server
  template:
    metadata:
      name: metrics-server
      labels:
        application: kubernetes
        component: metrics-server
        deployment: metrics-server
      annotations:
        logging/destination: "{{.Cluster.ConfigItems.log_destination_infra}}"
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      serviceAccountName: metrics-server
      containers:
      - name: metrics-server
        image: container-registry.zalando.net/teapot/metrics-server:v0.6.4-master-15
        args:
        - --cert-dir=/tmp
        - --secure-port=4443
        - --kubelet-use-node-status-port
        - --metric-resolution={{.Cluster.ConfigItems.metrics_server_metric_resolution}}
        resources:
          limits:
            cpu: "{{.ConfigItems.metrics_service_cpu}}"
            memory: "{{.ConfigItems.metrics_service_mem_max}}"
          requests:
            cpu: "{{.ConfigItems.metrics_service_cpu}}"
            memory: "{{.ConfigItems.metrics_service_mem_max}}"
        ports:
        - containerPort: 4443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: https
            scheme: HTTPS
          periodSeconds: 10
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - name: tmp-dir
          mountPath: /tmp
      volumes:
      # mount in tmp so we can safely use from-scratch images and/or read-only containers
      - name: tmp-dir
        emptyDir: {}
