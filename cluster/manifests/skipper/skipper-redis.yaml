apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    application: skipper-ingress-redis
    version: v7.2.4
  annotations:
    zalando.org/update-using-hpa-replicas: skipper-ingress-redis
  name: skipper-ingress-redis
  namespace: kube-system
spec:
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      statefulset: skipper-ingress-redis
  serviceName: skipper-ingress-redis
  template:
    metadata:
      labels:
        statefulset: skipper-ingress-redis
        application: skipper-ingress-redis
        version: v7.2.4
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        logging/destination: "{{.Cluster.ConfigItems.log_destination_infra}}"
{{- if eq .Cluster.ConfigItems.skipper_topology_spread_enabled "true" }}
        zalando.org/topology-spread-timeout: 7m
{{- end }}
    spec:
{{- if eq .Cluster.ConfigItems.skipper_topology_spread_enabled "true" }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              statefulset: skipper-ingress-redis
{{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
              - key: application
                operator: In
                values:
                - skipper-ingress-redis
      priorityClassName: "{{ .Cluster.ConfigItems.system_priority_class }}"
      terminationGracePeriodSeconds: 45
      containers:
      - image: container-registry.zalando.net/library/redis-7-alpine:7-alpine-20240226
        name: skipper-ingress-redis
        args:
        - /usr/local/bin/docker-entrypoint.sh
        - --save
        - ""
        ports:
        - containerPort: 6379
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: {{ .Cluster.ConfigItems.skipper_redis_cpu }}
            memory: {{ .Cluster.ConfigItems.skipper_redis_memory }}
        lifecycle:
          preStop:
            sleep:
              seconds: 30
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
{{ if eq .Cluster.ConfigItems.enable_dedicate_nodepool_skipper_redis "true"}}
      nodeSelector:
        dedicated: skipper-ingress-redis
      tolerations:
      - effect: NoSchedule
        key: dedicated
        value: skipper-ingress-redis
{{ end }}
