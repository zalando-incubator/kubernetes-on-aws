apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: teapot-admission-controller
  labels:
    application: kubernetes
    component: teapot-admission-controller
webhooks:
  - name: pod-admitter.teapot.zalan.do
{{- if eq .Cluster.ConfigItems.eks "true"}}
    # avoid admission-control applying to the admission-controller components (üêîü•ö)
    objectSelector:
      matchExpressions:
        - key: component
          operator: NotIn
          values: ["admission-controller", "coredns", "aws-node"]
        - key: k8s-app
          operator: NotIn
          values: ["kube-proxy"]
{{- end }}
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/pod"
      {{- else }}
      url: "https://localhost:8085/pod"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods", "pods/ephemeralcontainers"]
{{- if eq .Cluster.ConfigItems.teapot_admission_controller_inject_environment_variables "true" }}
  - name: pod-binding-admitter.teapot.zalan.do
{{- if eq .Cluster.ConfigItems.eks "true"}}
    # avoid admission-control applying to the admission-controller components (üêîü•ö)
    objectSelector:
      matchExpressions:
        - key: component
          operator: NotIn
          values: ["admission-controller", "coredns", "aws-node"]
        - key: k8s-app
          operator: NotIn
          values: ["kube-proxy"]
{{- end }}
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/pod"
      {{- else }}
      url: "https://localhost:8085/pod"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "CREATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods/binding"]
{{- end }}
  - name: storageclass-admitter.teapot.zalan.do
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/storageclass"
      {{- else }}
      url: "https://localhost:8085/storageclass"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "CREATE" ]
        apiGroups: ["storage.k8s.io"]
        apiVersions: ["v1", "v1beta1"]
        resources: ["storageclasses"]
  - name: node-admitter.teapot.zalan.do
{{- if eq .Cluster.ConfigItems.eks "true"}}
    # avoid admission-control applying to seed node where the admission-controller components run (üêîü•ö)
    objectSelector:
      matchExpressions:
        - key: dedicated
          operator: NotIn
          values: ["cluster-seed"]
{{- end }}
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/node"
      {{- else }}
      url: "https://localhost:8085/node"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    sideEffects: "None"
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["nodes"]
  - name: configmap-admitter.teapot.zalan.do
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/configmap"
      {{- else }}
      url: "https://localhost:8085/configmap"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "DELETE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["configmaps"]
  - name: cronjob-admitter.teapot.zalan.do
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/cronjob"
      {{- else }}
      url: "https://localhost:8085/cronjob"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["batch"]
        apiVersions: ["v1"]
        resources: ["cronjobs"]
  - name: job-admitter.teapot.zalan.do
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/job"
      {{- else }}
      url: "https://localhost:8085/job"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["batch"]
        apiVersions: ["v1"]
        resources: ["jobs"]
  - name: deployment-admitter.teapot.zalan.do
{{- if eq .Cluster.ConfigItems.eks "true"}}
    # avoid admission-control applying to the admission-controller components (üêîü•ö)
    objectSelector:
      matchExpressions:
        - key: component
          operator: NotIn
          values: ["admission-controller"]
{{- end }}
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/deployment"
      {{- else }}
      url: "https://localhost:8085/deployment"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["deployments"]
  - name: statefulset-admitter.teapot.zalan.do
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/statefulset"
      {{- else }}
      url: "https://localhost:8085/statefulset"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["statefulsets"]
  - name: crd-admitter.teapot.zalan.do
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/crd"
      {{- else }}
      url: "https://localhost:8085/crd"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: ["CREATE", "UPDATE", "DELETE"]
        apiGroups: ["apiextensions.k8s.io"]
        apiVersions: ["v1"]
        resources: ["customresourcedefinitions"]
  - name: stack-admitter.teapot.zalan.do
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/stack"
      {{- else }}
      url: "https://localhost:8085/stack"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: ["UPDATE"]
        apiGroups: ["zalando.org"]
        apiVersions: ["v1"]
        resources: ["stacks"]
  - name: stackset-admitter.teapot.zalan.do
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/stackset"
      {{- else }}
      url: "https://localhost:8085/stackset"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["zalando.org"]
        apiVersions: ["v1"]
        resources: ["stacksets"]
  - name: hpa-admitter.teapot.zalan.do
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/hpa"
      {{- else }}
      url: "https://localhost:8085/hpa"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "None"
    matchPolicy: Equivalent
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["autoscaling"]
        apiVersions: ["v2"]
        resources: ["horizontalpodautoscalers"]
  - name: serviceaccount-admitter.teapot.zalan.do
{{- if eq .Cluster.ConfigItems.eks "true"}}
    # avoid admission-control applying to the admission-controller components (üêîü•ö)
    objectSelector:
      matchExpressions:
        - key: component
          operator: NotIn
          values: ["admission-controller", "aws-node", "coredns"]
{{- end }}
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/serviceaccount"
      {{- else }}
      url: "https://localhost:8085/serviceaccount"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    rules:
      - operations: [ "CREATE", "UPDATE", "DELETE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["serviceaccounts"]
{{- if eq .Cluster.ConfigItems.teapot_admission_controller_check_daemonset_resources "true" }}
  - name: daemonset-admitter.teapot.zalan.do
{{- if eq .Cluster.ConfigItems.eks "true"}}
    # avoid admission-control applying to the admission-controller components (üêîü•ö)
    objectSelector:
      matchExpressions:
        - key: component
          operator: NotIn
          values: ["aws-node", "coredns"]
        - key: k8s-app
          operator: NotIn
          values: ["kube-proxy"]
{{- end }}
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/daemonset"
      {{- else }}
      url: "https://localhost:8085/daemonset"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["daemonsets"]
{{- end }}
  - name: priorityclass-admitter.teapot.zalan.do
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/priorityclass"
      {{- else }}
      url: "https://localhost:8085/priorityclass"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["scheduling.k8s.io"]
        apiVersions: ["v1"]
        resources: ["priorityclasses"]
  - name: postgresql-admitter.teapot.zalan.do
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/postgresql"
      {{- else }}
      url: "https://localhost:8085/postgresql"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    rules:
      - operations: [ "CREATE", "DELETE" ]
        apiGroups: ["acid.zalan.do"]
        apiVersions: ["v1"]
        resources: ["postgresqls"]
  - name: namespace-admitter.teapot.zalan.do
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/namespace"
      {{- else }}
      url: "https://localhost:8085/namespace"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    rules:
      - operations: [ "DELETE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["namespaces"]
  - name: service-admitter.teapot.zalan.do
{{- if eq .Cluster.ConfigItems.eks "true"}}
    # avoid admission-control applying to the admission-controller components (üêîü•ö)
    objectSelector:
      matchExpressions:
        - key: component
          operator: NotIn
          values: ["admission-controller"]
{{- end }}
    clientConfig:
      {{- if eq .Cluster.ConfigItems.eks "true"}}
      service:
        name: "admission-controller"
        namespace: "kube-system"
        path: "/service"
      {{- else }}
      url: "https://localhost:8085/service"
      {{- end }}
      caBundle: "{{ .Cluster.ConfigItems.ca_cert_decompressed }}"
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: "NoneOnDryRun"
    matchPolicy: Equivalent
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["services"]
