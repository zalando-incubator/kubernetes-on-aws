# {{ if eq .Cluster.ConfigItems.skipper_canary_controller_enabled "true" }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: skipper-canary-controller
  namespace: kube-system
  labels:
    application: skipper-ingress
    component: canary
spec:
  # schedule: "0 9-19 * * *" # every hour from 9 to 17 -> migrate to this when we are sure everything is ok
  schedule: "*/30 * * * *"
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            application: skipper-ingress
            component: canary
          annotations:
            kubernetes-log-watcher/scalyr-parser: |
              [{"container": "controller", "parser": "keyValue"}]
            logging/destination: "{{ .Cluster.ConfigItems.log_destination_both }}"
        spec:
          serviceAccountName: skipper-canary-controller
          # Make sure the job run only once
          restartPolicy: Never
          containers:
          - name: skipper-canary-controller
            terminationMessagePolicy: FallbackToLogsOnError
            image: container-registry.zalando.net/gwproxy/skipper-canary-controller:main-29
            env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: _PLATFORM_OBSERVABILITY_ACCESS_TOKEN
              value: "{{ .Cluster.ConfigItems.lightstep_token }}"
            - name: _PLATFORM_OBSERVABILITY_COLLECTOR_SCHEME
              value: "{{ .Cluster.ConfigItems.observability_collector_scheme }}"
            - name: _PLATFORM_OBSERVABILITY_COLLECTOR_PORT
              value: "{{ .Cluster.ConfigItems.observability_collector_port }}"
            - name: _PLATFORM_OBSERVABILITY_COLLECTOR_ENDPOINT
              value: "{{ .Cluster.ConfigItems.observability_collector_endpoint }}"
            - name: _PLATFORM_OBSERVABILITY_METRICS_ENDPOINT
              value: "{{ .Cluster.ConfigItems.observability_metrics_endpoint }}"
            - name: _PLATFORM_OBSERVABILITY_METRICS_PORT
              value:  "{{ .Cluster.ConfigItems.observability_metrics_port }}"
            - name: _PLATFORM_ACCOUNT
              value: "{{ .Cluster.Alias }}"
            - name: _PLATFORM_OBSERVABILITY_COMMON_ATTRIBUTE_CLOUD__ACCOUNT__ID
              value: "{{ .Cluster.Alias }}"
            - name: _PLATFORM_CLUSTER_ID
              value: "{{ .Cluster.ID }}"
            - name: _PLATFORM_OPENTRACING_TAG_ACCOUNT
              value: "{{ .Cluster.Alias }}"
            - name: _PLATFORM_OPENTRACING_LIGHTSTEP_COLLECTOR_PORT
              value: "8443"
            - name: _PLATFORM_OPENTRACING_LIGHTSTEP_COLLECTOR_HOST
              value: "{{ .Cluster.ConfigItems.tracing_collector_host }}"
            - name: _PLATFORM_OPENTRACING_LIGHTSTEP_ACCESS_TOKEN
              value: "{{ .Cluster.ConfigItems.lightstep_token }}"
            - name: LIGHTSTEP_DEBUG
              value: "true"
            args:
              - "--dry-mode=true"
              - "--prometheus-url=http://prometheus.kube-system.svc.cluster.local"
              - "--log-level=debug"
              - "--run-once=true"
              - "--use-mem-query"
              - "--use-status-query"
            resources:
              limits:
                memory: "128Mi"
                cpu: "500m"
# {{ end }}
