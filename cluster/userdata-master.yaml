#cloud-config
ssh_authorized_keys:
  - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC8yXjMX812gbdUsosLvIA/zPrRZI+iOKo8Igq7eiwRTeJKxIkRd2vxDGDfqzCnMhUPPgLW7YM0FWt1u8ZTlXyL4fv1KZuYMRF+27GuU2b/IKu4JYlHDDHrvKCr9tyKb+YVPrAfzi2xVRTGGZG6GRmAiDw8HSUFdejuDLIropAFQu9gAow9aiuQG6kmxZK8qdwIu03eZhuUHCRySCPbusjO+I2JEyVa7lM+P1zt2znDwXsdGjTzHE7NSu5z/VHzho3STWolBm5Vk8uLNYKhjs0eiw/FXV5t+c08Y3JA1LwjAmfOBS23ERSHMG8I3EVSnB9utrdLXejwFAV/jY+Dl2QX9o8brFePBe26MbSg9udD0yfrVz4HEG6NigK6sSx97Zs0lcaSwvjJsnp/J3B1IQMlNRLJGQ7WxM9H2rtoMmD7/iPdADevehEui8C9iaADk6j8AWtN0SJbccSvidrFXW7eH/YSYW394rk8Cl1xBk2RORv3OGVy/RNVt6/Pk/BzvqKf3RvKlbvbFZsWeBSZHDAKeer7001g8HmKV7c8fnDsxIU9Ro3aeWpsX1rQ/jzH1an2deXzVDX1Xbm80VmL5M53dr4w2ZiF5uEIODEUr2nssvl6fhdnaXmbO0vsIyOVawl8mkQ7CBsW06Q+kNs7iDvwVmoG/DD0k4i86La2TBpGvQ== andre.hartmann@zalando.de'
  - 'ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAt8djQXfn5U7H85oDzuZRfRONF+jVqn3Mp9t3tnBrJdKyTccfDovq1sekzEdOFdmj74yfS8bzaIO9pDUczy6j5k2MtDCoRnzAO6KZc46jMJ2GjhLArUuHLjmAw2r9LotZ30LEIEvJdmUI7mDlPMczv381PghyM8+DsYv62UrfjDiOsZ4EVkYnztQlO3ntNE16RFNj4fbfErQz67kmw0lB8C6bAf0RuRmvXzB7xRMplmknQnLusoURmySKdZM0GUe0VY6fmqOsgzHVLoEs1m82V8QK1ac/1DSHA91v50MbpCjTVLaRhjR8nmhWBedlhb6j5ClZdAQ8iwyyWC1MFQuvKw== henning@zalando.de'
  - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDIgO42Rr98DRo4N86Uk4cqHcnbA0iPhL7/DQXRNs+o2vfnfoTVNQiyfq8XzScb+pRJpiq2wW2OthMVRUJsiO4PECw7avYAi0M8cyCsu+ZUoIeMlu+TssWA00GZgdKcQKyCoyLlGbPu2z4GpM9tX+7ASMbMuk6fpm6n9af1YbTm2eqKKXpHDJO+aex3WCj1VyQpCgCD4zquGRy8JRSiQ+QGyGZHIzWWpo3Lc1xGqSQu6L3h4RMrwtZNOjMr/xxxnApOQjBLr70Q8MlYnAhXrIyLjNOaMabMKVxDEltrvN2rCWfN/DFyRi4c5GiDKk1/lwlfO9dRieUqXm9J670PWhwx jan.mussler@zalando.de'
  - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDOjGGBqrWGdbh0yfkBRE04IbdiAP2TJ2RXnfnp3OV8Lw+jg7cUqeZA5l2vIhFd2ctKPd5OGE3K/A6xCK3hFV9V01oYbH8S3IvrhyA+VjBG0d/ZgTm6GCrlE4XeAt9/ourBSxrrE04lfO786dhLsGEOa5WvvSG3Z/6BhyC/1e5Bd37nnWB363fjAsbg1UgSPr99QZQ5l2mSxN4i2IpJjULBWpLvrJLLJzzl67aaVhDjdtggEU+pMsOoRpDuJ46cYMMDvBI9gyyal2G1aIkqu9iejt1bly53Th2ZAiXecXxEh4K3a5H/Czf70vpCzXQiG1OuZRD1PaSpqw4+zzcizZdX matthias@zalando.de'
  - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCs4NhH7uwlnklYYlV1GP57XX9NHYgXNv0njfEVowR1jFSKiMdEUtPKz5lOAeDtKpck9HyjxVOTSutNOIBZkkgN/FgkcpNbc59nIO4ELUzipkJivuYNO1lDAjCQi1qwYo+uksiNfcsao9mn7nd9Rh1g8TXYv95TSvml9v/Dolmanm1qj6OkbDw1xIurnNsoCjdxCWwSRGNja4r+PQc8pi+1xpdUBEvn40CeBdU7b/hZnv/BM9FIKSsVlIwMR2i/Co2rxCKo9B3q4dmdQ/2C1QczINVpPQcNUMuiljJFMXvT7dgfNsnUBe8vFuoPgqohJ/m8AiKZZOyoRNiCuELnKLRKqxosDmJz47Y0YiYgZk9jpnmt+x1fwqhY2R85F7W4RybpX3AFL1jOqOT2lE+idkhyeFq/pPoAiPvUcpQSmL9AwlrG6cPklTJZW+dUzH/W6kNlgl/T6hnMn4Mu+IljG08Iyb/HBdmOX+uRq5wdF8lI9Zjzlwg+j7HMa3p1O7MNwpSJVjVXkhUXH0WrFrK2JkwgXokIWvu0o+lajYOmXRQeGCyVybg06WFCzOXnK2toVucFMuAGoM0NkthAnodZCk+xXLNrtHOYagpdJ/x/Q88vuDsZr7IG0NvgX/OCq1a5lpnIydCe+tABNNKcRaOuOLbDYVgUaeVzIXyJjRYu5ZN/JQ== mikkel.larsen@zalando.de'
  - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAEAQCry4lt7DKc4yQpWIsvIIzWlBYBJifhX+1BZueb8jXpeVyiqL4U4S/XyR4QPRvIxB5JY1rc1y/Mo6+J6XpbhIfSJROMSaFWcsisRj2/lmvrU9RmhSefpQgB04qQcXejy6WqCyYYQSUwwbbObmq/mFZLt4iMI3J5oDyN5Fg5+8JXb4udDZQLJuH7qIkt+MZuy8v7HtSK03lEmDlAm14D9zndFEfSDfituUk/X/K5N7Li6dGYf4JLqIuX5yf2HoNyCCDrtUm9E/pUvBxrnPEtALBuMf8hd+hgNhJmiX2sZgSQHV9XhYLlNUshw+uZ7YVFOaYi3OQUn5pJVKFuxF5LftsXWl1xlFRy7SS2Vf5emMBXOmVTcDKFIghpojtsmsq53lvu2YSBZ6BJP2cqgD5HLw3xgqn6uzYaJCbCdiJZsGQ7Gly/fShR0ebOuvbumJpxegCE54pps3icwhvEhqbWhTv+z/zuvH1z5rqod1+GvrH6kjA80+cjv56zgLR77EHXnhwrTsDgb5KWm9Qktl/bbfnrYzT889/4gzE+3IO/RBHgM12aAHFCc1G9Kp/25iEK/2b3t6Qw1sikNo/0BRD4Y1CakTXtZOvp7nNOCZSAUY0PXsrKF82sDWIgccgeiNebxS1ESU0JQVDzzKZ/HmOP5fCRFC3nQnZtk/5/nj6iRiH22gcRl77Cv3k7MpX9MnpVE5Duk7VL0wnVQ8xJ7mNbUSzadsyJHbvBjfsWL2C+s6LC0ApAVBXekcymvkqP7nZwPj8XCrN0nWhBBGym6VUwDdLI9dedWd3XJrhgmbmc74xOhYHTTNVpiuHpYNb90G+0O/GHWaAY76fg4YvR+OwZVbPu8a36EhYMuzsNEshzwnAxh/1PHrGH7X2aHc+E37f5/hTL9QArqdiIhqt0iMCXMF89mlNlQ8oC6FgmaFlMub4fX7Sy6tkzl3W9pqQvAVlFxvCQ2zApYYsMwJDgwQRkxCX0ohzDYKvnFXLHGi3M+mKZQfDEe2KNOJaB8vBc3G0veTiH3fnveB/NtmsvYiBBQn+Z/Ftiezb8ApnE6GJofKBVA+ijCO4eKyYOuozik+oKJ4F2wLnDZM2rRJU/uxZhGrg50cPv62Hszhc3m3WGLMHJ9lntK1mDpZds6xbF4DccsE81Of11hZnTE8sookAKRt1FIL+kZd564JWaD9iM3SQuTXdCK/46Ms+Dmr5/MCMlGSNyRw52OZ1m1R5s+yMDBddGwMf5xh6s5Mh2G9bODETueEDPlYNiQCQw5Rx19ZT/W/CaaPswTYPYIgAQNXg8XnWzdKDCTqZ2z6LMwfyEAgaHIPoubLPVKk0iPWYnS2BpfrxdeG/DeywDVf2GEgnkdaVD martin.linkhorst@zalando.de'
  - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCuFg0sZtpORWFESaGFnDHYPDG2mYAEsg3pz2yvLn8L2U4b+clIqzQyMjjnze/syB979hVxAucb5A7YR8s7jPIcHUsTcLdGJUNATxiYSdReFj+6ki+6vk01zf9fTVrmAy39SYMi0hSicyMpQL7ur1osnqZ/OEq7+m/qJD6dQ5KpSMVr72kcdXqObEGxIKwPSJlyZ2df1UoMxuslLeGzovuNfngFMTpE7K6A1Nuysn0Vm4EIJ1/UC1nADbTsRexpwCD/7ZanS349RGhGA7SLeXKwSEejL6IkaMF6mWyy4+IWeKraSogw73oM9Quyzq72AwZos4WTb61DVWcRaRXj0D1/ raffaele.di.fazio@zalando.de'
  - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqAikaHsZWMuJvKZphZPZG0fnKMvVCRfBAbIS6e0Y+YqM0PfsWgB5e4f5TrbisQHdKopbfZVwYIaV/NegEuinrYPKC7t2ese/HjxgjHR95zHOcDP19Cbo+xeyH8zbRd9K3iRSyCUSMNRw5NL6zN8JOSl12m8QWQA4hTjFTmt870fIT4RLxu9qGlbQipUm57E/SotsNC41MQ/PsLQzOAviKrkS1rei2vzRHzAcjz1Z7GT5oH+dFVUC66kKa0XWDvq+VtkRVoLvS2chrIPCgESeeZAyOKyiOoyJxFFFiMVK48MWDBBIYTIsHE0qs/RwBi9+8lQGiHK5Rpk2djcloO0c7 sandor.szuecs@zalando.de'
  - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCa6Sj76tQ/nyCbkAd5zL/ZPhH+4lfuBT7fFXfamRnIiA3LVXp5/0R8vhvXOYL5Q6uclr5n8sJD1IcwpYTkQrV+u7+PKnbBJZjYDgsbcDr843jzDHhJOzWiKpB5fFcu4Ll5pYVyXq3CgsTuNKBUCnQJEtx7WLRBAFoHZuicp9IjfXfyEVclcKvlGfWBFnidaSCrv2MKKCfqYwif8bY1PSnDYaqsqCrptZkzvuFlcewtsp2t12W760LiZlAB8RRM9SE5DdTYqyeLB2NymI0JecFM+yW/p3bRp6NZt63w9N/IqjQw5aJwAJfEzrb2dVKlr9y7TXyKZPfElvzPEsujTZBOTZs4uRfTMdPsAJj8qB/hNvdIfaFLn9KNQvzhwOjk8zjYU5NhZMUu5T8VBby8tcg9DLFfIqLJxoD1E1UHkOXCIuA3jhF6zre2d6cUeLmatsuOmd2OYeAcy9s3GOOjn/zCpIZ9k5eDLaWKwBgNFnNVznWdOgpd5BaY5PE1wS6655/po7hEngE3KWaNcmHV7AuQteozWYNNbIZy78UZ2p9LDm7v78BP5UNy834kSOu8MUQN2hNJ9hZ4x0MI2F6nmDKxqxAfkH9LBQ3Mf6FfJsV0+GSrLnI0mvmBcZp9/LOwcBAjf9MyHN3IcFbTxiQATaj7rXnYoBi88g9l4lQObiBNXQ== yerken.tussupbekov@zalando.de'
coreos:
  update:
    reboot-strategy: "off"
  flannel:
    interface: $private_ipv4
    etcd_endpoints: http://$private_ipv4:2379
  etcd2:
    discovery-srv: {{ETCD_DISCOVERY_DOMAIN}}
    proxy: on
    advertise-client-urls: http://$private_ipv4:2379
    initial-advertise-peer-urls: http://$private_ipv4:2380
    listen-client-urls: http://0.0.0.0:2379
    listen-peer-urls: http://0.0.0.0:2380
  units:
    - name: etcd2.service
      command: start
      runtime: true

    - name: docker.service
      drop-ins:
        - name: 40-flannel.conf
          content: |
            [Unit]
            Requires=flanneld.service
            After=flanneld.service
            [Service]
            EnvironmentFile=/etc/kubernetes/cni/docker_opts_cni.env
        - name: 60-dockeropts.conf
          content: |
            [Service]
            Environment="DOCKER_OPTS=--log-opt=max-file=2 --log-opt=max-size=50m"

    - name: flanneld.service
      drop-ins:
        - name: 10-etcd.conf
          content: |
            [Service]
            ExecStartPre=/usr/bin/etcdctl \
            --endpoint=http://localhost:2379 set /coreos.com/network/config \
            '{ "Network": "10.2.0.0/16", "Backend": {"Type": "vxlan"}}'

    - name: kube2iam-iptables.service
      command: start
      runtime: true
      content: |
        [Service]
        Type=oneshot
        ExecStart=/usr/sbin/iptables \
          --append PREROUTING \
          --protocol tcp \
          --destination 169.254.169.254 \
          --dport 80 \
          --in-interface cni0 \
          --match tcp \
          --jump DNAT \
          --table nat \
          --to-destination $private_ipv4:8181

        [Install]
        WantedBy=multi-user.target

    - name: kubelet.service
      command: start
      runtime: true
      content: |
        [Service]
        Environment=KUBELET_VERSION=v1.5.3_coreos.0
        Environment=KUBELET_ACI=docker://registry.opensource.zalan.do/teapot/hyperkube
        Environment="RKT_OPTS=--volume dns,kind=host,source=/etc/resolv.conf \
        --insecure-options=image \
        --mount volume=dns,target=/etc/resolv.conf \
        --volume rkt,kind=host,source=/opt/bin/host-rkt \
        --mount volume=rkt,target=/usr/bin/rkt \
        --volume var-lib-rkt,kind=host,source=/var/lib/rkt \
        --mount volume=var-lib-rkt,target=/var/lib/rkt \
        --volume stage,kind=host,source=/tmp \
        --mount volume=stage,target=/tmp \
        --volume var-log,kind=host,source=/var/log \
        --mount volume=var-log,target=/var/log"
        ExecStartPre=/usr/bin/mkdir -p /var/log/containers
        ExecStart=/usr/lib/coreos/kubelet-wrapper \
        --cni-conf-dir=/etc/kubernetes/cni/net.d \
        --network-plugin=cni \
        --container-runtime=docker \
        --rkt-path=/usr/bin/rkt \
        --register-schedulable=false \
        --allow-privileged \
        --node-labels=master=true \
        --node-labels={{NODE_LABELS}} \
        --pod-manifest-path=/etc/kubernetes/manifests \
        --cluster_dns=10.3.0.10 \
        --cluster_domain=cluster.local \
        --kubeconfig=/etc/kubernetes/kubeconfig \
        --require-kubeconfig \
        --cloud-provider=aws \
        --low-diskspace-threshold-mb=1000 \
        --feature-gates=AllAlpha=true \
        --system-reserved=cpu=100m,memory=164Mi \
        --kube-reserved=cpu=100m,memory=282Mi
        Restart=always
        RestartSec=10

        [Install]
        WantedBy=multi-user.target

    - name: kube-node-drainer.service
      enable: true
      command: start
      runtime: true
      content: |
        [Unit]
        Description=drain this k8s node to make running pods time to gracefully shut down before stopping kubelet
        Requires=docker.service
        After=docker.service

        [Service]
        Type=oneshot
        RemainAfterExit=true
        ExecStart=/bin/true
        TimeoutStopSec=120s
        ExecStop=/bin/sh -c '/usr/bin/rkt run \
        --volume=kube,kind=host,source=/etc/kubernetes,readOnly=true \
        --mount=volume=kube,target=/etc/kubernetes \
        --net=host \
        registry.opensource.zalan.do/teapot/hyperkube:v1.5.3_coreos.0 \
          --exec=/kubectl -- \
          --kubeconfig=/etc/kubernetes/kubeconfig \
          drain $(hostname) \
          --ignore-daemonsets \
          --delete-local-data \
          --force'

        [Install]
        WantedBy=multi-user.target

    - name: install-microscope.service
      command: start
      runtime: true
      content: |
        [Unit]
        Requires=docker.service
        After=docker.service
        [Service]
        Type=oneshot
        ExecStart=/usr/bin/docker pull registry.opensource.zalan.do/teapot/microscope:v0.0.4

write_files:

  - path: /etc/kubernetes/kubeconfig
    permissions: "0644"
    owner: core
    content: |
      apiVersion: v1
      kind: Config
      clusters:
      - name: local
        cluster:
          server: http://localhost:8080
      users:
      - name: kubelet
      contexts:
      - context:
          cluster: local
          user: kubelet

  - path: /etc/kubernetes/config/authn.yaml
    permissions: 0644
    owner: root:root
    content: |
      clusters:
        - name: authz-webhook
          cluster:
            server: http://localhost:8081/authentication
      users:
        - name: authz-webhook-client
          user:
            token: notused
      current-context: authz-webhook
      contexts:
      - context:
          cluster: authz-webhook
          user: authz-webhook-client
        name: authz-webhook

  - path: /etc/kubernetes/config/authz.yaml
    permissions: 0644
    owner: root:root
    content: |
      clusters:
        - name: authz-webhook
          cluster:
            server: http://localhost:8081/authorization
      users:
        - name: authz-webhook-client
      current-context: authz-webhook
      contexts:
      - context:
          cluster: authz-webhook
          user: authz-webhook-client
        name: authz-webhook

  - path: /etc/kubernetes/cni/docker_opts_cni.env
    content: |
      DOCKER_OPT_BIP=""
      DOCKER_OPT_IPMASQ=""

  - path: /opt/bin/host-rkt
    permissions: 0755
    owner: root:root
    content: |
      #!/bin/sh
      exec nsenter -m -u -i -n -p -t 1 -- /usr/bin/rkt "$@"

  - path: /etc/kubernetes/manifests/kube-proxy.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-proxy
        namespace: kube-system
        labels:
          application: kube-proxy
          version: v1.5.3_coreos.0
        annotations:
          rkt.alpha.kubernetes.io/stage1-name-override: coreos.com/rkt/stage1-fly
      spec:
        hostNetwork: true
        containers:
        - name: kube-proxy
          image: registry.opensource.zalan.do/teapot/hyperkube:v1.5.3_coreos.0
          command:
          - /hyperkube
          - proxy
          - --master=http://127.0.0.1:8080
          - --feature-gates=AllAlpha=true
          - --v=2
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 50m
              memory: 75Mi
            limits:
              cpu: 200m
              memory: 200Mi
          volumeMounts:
          - mountPath: /etc/ssl/certs
            name: ssl-certs-host
            readOnly: true
          - mountPath: /var/run/dbus
            name: dbus
            readOnly: false
        volumes:
        - hostPath:
            path: /usr/share/ca-certificates
          name: ssl-certs-host
        - hostPath:
            path: /var/run/dbus
          name: dbus

  - path: /etc/kubernetes/manifests/kube-apiserver.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-apiserver
        namespace: kube-system
        labels:
          application: kube-apiserver
          version: v1.5.3_coreos.0
      spec:
        hostNetwork: true
        containers:
        - name: kube-apiserver
          image: registry.opensource.zalan.do/teapot/hyperkube:v1.5.3_coreos.0
          command:
          - /hyperkube
          - apiserver
          - --bind-address=0.0.0.0
          - --insecure-bind-address=0.0.0.0
          - --etcd-servers=http://localhost:2379
          - --etcd-prefix=/registry-{{STACK_VERSION}}
          - --allow-privileged=true
          - --service-cluster-ip-range=10.3.0.0/24
          - --secure-port=443
          - --advertise-address=$private_ipv4
          - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,PodSecurityPolicy
          - --tls-cert-file=/etc/kubernetes/ssl/apiserver.pem
          - --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
          - --service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem
          - --runtime-config=extensions/v1beta1/networkpolicies=true,batch/v2alpha1=true,extensions/v1beta1/podsecuritypolicy=true
          - --authentication-token-webhook-config-file=/etc/kubernetes/config/authn.yaml
          - --cloud-provider=aws
          - --authorization-mode=Webhook
          - --authorization-webhook-config-file=/etc/kubernetes/config/authz.yaml
          - --runtime-config=authorization.k8s.io/v1beta1=true
          - --feature-gates=AllAlpha=true
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              port: 8080
              path: /healthz
            initialDelaySeconds: 15
            timeoutSeconds: 15
          ports:
          - containerPort: 443
            hostPort: 443
            name: https
          - containerPort: 8080
            hostPort: 8080
            name: local
          volumeMounts:
          - mountPath: /etc/kubernetes/ssl
            name: ssl-certs-kubernetes
            readOnly: true
          - mountPath: /etc/ssl/certs
            name: ssl-certs-host
            readOnly: true
          - mountPath: /etc/kubernetes/config
            name: kubernetes-configs
            readOnly: true
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              cpu: 200m
              memory: 1Gi
        - image: registry.opensource.zalan.do/teapot/k8s-authnz-webhook:v0.1.6
          name: webhook
          ports:
          - containerPort: 8081
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 8081
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 50Mi
          env:
            - name: SHARED_SECRET
              value: {{WORKER_SHARED_SECRET}}
            - name: CONTROLLER_MANAGER_SECRET
              value: {{CONTROLLER_MANAGER_SECRET}}
            - name: WEBHOOK_ADDRESS
              value: :8081
            - name: USERS_API_URL
              value: https://users.auth.zalando.com
            - name: CLUSTER_ID
              value: {{WEBHOOK_ID}}
            - name: TOKENINFO_URL
              value: https://info.services.auth.zalando.com/oauth2/tokeninfo
            - name: USER_GROUPS
              value: stups_autobahn=Administrator,stups_deployment-controller-ui=ReadOnly,credentials-provider=Administrator,credprov-kube-ops-view-read-only-token=ReadOnly,credprov-cluster-lifecycle-manager-cluster-rw-token=Administrator,credprov-cluster-lifecycle-manager-test-cluster-rw-token=Administrator
        - name: nginx
          image: registry.opensource.zalan.do/teapot/nginx:1.11.5
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 50Mi
          volumeMounts:
          - name: config-volume
            mountPath: /etc/nginx
        volumes:
        - hostPath:
            path: /etc/kubernetes/ssl
          name: ssl-certs-kubernetes
        - hostPath:
            path: /etc/kubernetes/config
          name: kubernetes-configs
        - hostPath:
            path: /usr/share/ca-certificates
          name: ssl-certs-host
        - hostPath:
            path: /etc/kubernetes/nginx
          name: config-volume

  - path: /etc/kubernetes/manifests/kube-controller-manager.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-controller-manager
        namespace: kube-system
        labels:
          application: kube-controller-manager
          version: v1.5.3_coreos.0
      spec:
        containers:
        - name: kube-controller-manager
          image: registry.opensource.zalan.do/teapot/hyperkube:v1.5.3_coreos.0
          command:
          - /hyperkube
          - controller-manager
          - --kubeconfig=/etc/kubernetes/controller-kubeconfig
          - --leader-elect=true
          - --service-account-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
          - --root-ca-file=/etc/kubernetes/ssl/ca.pem
          - --cloud-provider=aws
          - --feature-gates=AllAlpha=true
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 10252
            initialDelaySeconds: 15
            timeoutSeconds: 15
          volumeMounts:
          - mountPath: /etc/kubernetes/ssl
            name: ssl-certs-kubernetes
            readOnly: true
          - mountPath: /etc/ssl/certs
            name: ssl-certs-host
            readOnly: true
          - mountPath: /etc/kubernetes
            name: kubeconfig
            readOnly: true
        hostNetwork: true
        volumes:
        - hostPath:
            path: /etc/kubernetes/ssl
          name: ssl-certs-kubernetes
        - hostPath:
            path: /etc/kubernetes
          name: kubeconfig
        - hostPath:
            path: /usr/share/ca-certificates
          name: ssl-certs-host

  - path: /etc/kubernetes/manifests/kube-scheduler.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-scheduler
        namespace: kube-system
        labels:
          application: kube-scheduler
          version: v1.5.3_coreos.0
      spec:
        hostNetwork: true
        containers:
        - name: kube-scheduler
          image: registry.opensource.zalan.do/teapot/hyperkube:v1.5.3_coreos.0
          command:
          - /hyperkube
          - scheduler
          - --master=http://127.0.0.1:8080
          - --leader-elect=true
          - --feature-gates=AllAlpha=true
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 100m
              memory: 100Mi
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 10251
            initialDelaySeconds: 15
            timeoutSeconds: 15

  - path: /etc/kubernetes/manifests/rescheduler.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: rescheduler-v0.2.1
        namespace: kube-system
        labels:
          application: rescheduler
          version: v0.2.1
          kubernetes.io/cluster-service: "true"
          kubernetes.io/name: "Rescheduler"
      spec:
        hostNetwork: true
        containers:
        - image: registry.opensource.zalan.do/teapot/rescheduler:v0.2.1
          name: rescheduler
          # TODO: Make resource requrements depend on the size of the cluster
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
          command:
          - /rescheduler
          args:
          - --running-in-cluster=false

  - path: /etc/kubernetes/nginx/nginx.conf
    content: |
      user nginx;
      worker_processes 1;

      error_log /dev/stdout info;

      events {
        worker_connections 1024;
      }

      http {
        default_type application/octet-stream;

        server_tokens off;
        access_log off;

        server {
          listen 8082;
          server_name _;

          location / {
            if ($request_method != GET) {
              return 403;
            }
            proxy_pass_request_body off;
            proxy_pass http://localhost:8080;
          }

          location ~ /secrets(/|$) {
            return 403 "unauthorized";
          }
        }
      }

  - path: /etc/kubernetes/controller-kubeconfig
    content: |
      apiVersion: v1
      kind: Config
      clusters:
      - name: https://10.3.0.1
        cluster:
          server: https://10.3.0.1
          certificate-authority: /etc/kubernetes/ssl/ca.pem
      contexts:
      - name: https://10.3.0.1
        context:
          cluster: https://10.3.0.1
          user: kube-controller-manager
      current-context: https://10.3.0.1
      users:
      - name: kube-controller-manager
        user:
          token: {{CONTROLLER_MANAGER_SECRET}}

  - path: /etc/kubernetes/ssl/ca.pem
    encoding: gzip+base64
    content: H4sIACiK/1cAA2WUWa+ySBCG7/kVc29OVJDt4rvopptFWWwWEe5E9kUFQbB//ec5X2YmmamkksqTSqqS9636+voExJph/6Vg1zdUQwE+/oZfjGUYioAUBaRKAWYDguKTCNiwaPqyqTR53kBAnuqHtZaLZzRH6ETIAc/lkIb7ljFDlbtSTCyw08A2wGCx9At3qmJvW0c+yNR5s9g1ni0ULTYKtjYqLx/2/sPIwvwNLSVYsA+OsLBPENx9RRu3UReM0TmllgtmVPxMRnhOfyaboV1+toeMUf93XawC4CiASOC7QSkOnxqDOahYNHp57YqhqI/79kg640oJo0qLAOscLNML9pK06W7RRV0/o5by02nedbZCjAXdjTp9cr6eaNquifvOETuP79cshsztXsWTMXI8wlFQT6k53kMZZfR+21labEiydJ5A1gXKQOKp3OgUamN83gqFn2A2Yy1GFc/iGSqtJdEm3o+HKQRT8yJrI9hHQ3fKTqOlN3rbtrMeefNuzeVeFayutW8cbNThOxN1bn0J5Z4Pm+p+DTXs+1WJ1T58SJZBlD3r+fQUl9ZxEkZXSjeec8+l3Vg3usc2Sloxb+QU76WluwyBMGWFkFQe54tJIp6Ex918Yrd01qWZtnnX3GK7OjZBmJyvtcSytkgMxAAC4P1tzYYPnG8JdSJBkEsYAksBPfljHHfjA6KvIQhmMGO4pv8qx/zjtB/pMMiWij3OR54bbhIe7EF8qI23iAmV3dU4zd3+slr1MGMLp5DdJHsycsdbUddAvOHoU1WttHlzrBe8LtWMqDGq28dg1jysl5MA91MWBMepdt6xfe6NajDbkZGCoLlZ4cXiuev0SlzBX08xalZurod0T9PHwO918RHnSRFCORErpFGVatle3hwO7CQwtqkfbJK+ePvlnGPz2Q+BIKb2TXastNRYojRFnevn9Ki8F93IiyjnBy69ghwr+hnpGhMui9NR0zTHRoyT5DoVc9WWE39DAa0NSvrxEbWtyR7iNgjc0zq0lJ2c0aGJ6n3UlSJDdvDASVlcwf6lPjiuedO3Yl6dy5Ev4CyXSHDcC/j1i/m5fmyj/3+E37OehiUuBAAA

  - path: /etc/kubernetes/ssl/apiserver.pem
    encoding: gzip+base64
    content: H4sIADyK/1cAA2WUybKjOBBF93xF719UMBnbLAWIWWDmYWfgIcBgGzCW8dcXfr3pqtZGobwZcSOVJ/PXr+1IUDOcf2Toh4ZqyCCEn+AvChmG0r1lGVy/MSCGBLBhnC9sr0mPSrc9oniZad1yo3mWDvCgLXmAmCH0EThqgI0gJTfIOPNxmwdsU/HoBRXgStiJJYBCiXuw2RA9Mg4SvSkdFGYvpAAOhR7rhN4u2WIUCss/gx2YkQ+JQjIl9jwLkmaqErO3E5Uv3zBFUvTjDF7I/RhTH+dS6995anJ5ahCMYYsAo8nBqAVGwSselIAXAbAzJIWAj26B21aqpyg7ur1QqZrpXWDTEvY540vPLq06WX4bMQN35fXOOa9y1a/sTajjk88zl/lOjHqq33eNfeVXOFLL63hsrsXEB7frNNcktYMVYtu4hhapQWwGd8/mZo5WmGup8ROSRjFfs5q2LH10QPmgHmCvSLOVdfwhKZZj60Uj8XmjUAJTQ6eHYqpk5vNiPcwR95q6vj25LjlbEEl1bwq2TeU9Tae5cGlueDwJshfo7uXitNZ7HcIVulcUMk5cHuwlbJm3XB/rfX3NdmEhJmIsTOwXxZm5N85dxYvkOgCvuXwZ9nrMHk/UzStNT2OMWT+LJkGMXs/7ZSL3JI/6yuU98OCUZU/JNyt8+4GIC/nO7MwnwEgCQOtwMRNcYKLgrZ0+cwKeTn++HuBky0CfVlam5yEKgZsmy7O2tUqVyCYZmvcBSfchxBkmOEtkefgAFa/FEDN56srwP28qT9GSa/GQpfFcGUbyQ2VqLnnq9+UqXPIkb6rkxdhXh8t2xuVvnfojYRW6Qo/flRav9vB6Zpw646bfXB0GBezk6mjZtA08ccu/N4WmLpQ9+M+GeBYAYP25CZD+JlEm/5IIPKnLcGmTWW0FrMz9OTWom5B7U38RWxzfsfm6cQ7bwGiBo8hnk7vXHxC0Cvd+FjCpLvK94Xdjwa2HVOwVXxwzRA1LcRyJSh/KUe653bLcKyUMZxVj2rN2uN7rddrmjgDq2j22qiqJ8GnQxvOoPO7VNZ2ontX001C8XbE88cN4fu6GylgFrliwZ2a9nRHBOko+y9jpNgvYPoqK5CKHAGhhlz/fqWqQ0/2+3Qb15C960vs3yy2bND8uL1v9Tu6C8raBPflSPtLKPGqd2Jung9cF0qQ7fpdRehAlX3Zlnf1SVr5zIrZ2+14YwYe3Un88RkvMkHLinWicWRBssIyc6p/hoe5465sRHcqKxoj62W7QUf6/8X4DpV5xig4FAAA=

  - path: /etc/kubernetes/ssl/apiserver-key.pem
    encoding: gzip+base64
    content: H4sIAFCK/1cAA22Vt66raACEe57i9OiKnIotfjLGRJM7gsnBmMzT79lb77RTzKfRSPPnz694SdHMH/cFfmxXC4An/ehS/J/xBzI0TZoqjQdAF4AjgQO2yY98hjyJNsgRS0Vj1/hDq9Ori3vzsX64k7zDpRqTfE2tCIM8tOAeTz0XVJpgaXfNw+TUv0tpawlOc+j8oBmVlS90qTXheqDXoh7yy599gfua+8E9IIJf6Ruke5gPKnI1Nd066jNzrOrIhEHjYGxgdq2T9UUqLuVAG7cVGedy86eJh+zGyJC5pCQVt3e7KE0tgoh6vV8XnpQIhr8TLdX0FnY6qb4/DzFuFvbTsbX4uSVODCLrYjoSWo1jRFR4pHBLwpFgD94pV65N6OtfjSiQ/EFVkpbYjcDuyjO7NcbYEZruY9MPZR0uA8jI6ERn9WAIHpG3ouBZVMxWzULHov4eK8dcWEJ2aCJwAA+m37KlpV6NPYiGYRREf4TolBxMp3tWV6R8g2xUp/cdwOr50UXj2ojqfIWenJ1rbXw57+bvXEpgE/TlQK/fBybvUNdsyjPvX6e3quLrI02Pc+fMPMopMU532di4omSXbuNvg7x0vjs9Hx5RjbTdphNPxofSWUaFzZ7q7cbeNSXDKOcMFYnnsAO+obMuH7RZuffBACVOQF1wgd3NV/q131dqw54E1ZWt25WO+xrqishvyEwKaSvh8zjfikerMfzGnpilDs5pLcGr0GvLXr6sYw5ncCOeDzkIL/Tdq5Xv3s62GF6uzRj8oUc6W9z4OMmde3z2w3bbfeEcqudGs0Xb+BeEEkYtWgqRvUP3kyRUsQTovAtPdsbTuZikCkw1x0+H/1SDYwdNYziuvBDnJw38DsjG14ueC/OG6ElvMv92tSTv3LhvcGnjYskQc+AzRapEeHiUvEuLeZhzAnZyekhnmcuF4EEnW4miUIWXs4tGcxtXRbei+Mw2umHGLXbm8TCa1LF2emipDVkqPAreqTKY1HQtf4mxSXpBtC1bz1AzX+VhEUa40ffcbENHTPn56QFj9h1L3nfkcsxZkTXcEWc0Pstj5RqlN8KugB5MjFZksG09/YKv9EOoGa44Pq5pR2y11arbi+9rk7GWbi1+0b3Gu62vhm4iymSgiQiKK6JgomBBQaLc1PLe4rjJRAR8pvHo8/cQSSEjsOgvMsirQWJvYDV3WczwNOJnuQEoKM7Py8GTa71j+JWyii0u31W9C2ealksxeEojjJLZ0OzdTHfSDPXYw2gcC8dqmjasQi2P5C7i2jXCnduNTw/2ztOcyOTooOaaDdybeU3t8TscqSNYv0GyIU8PUSRrfwAPFkADnJcqfYu+VTHfVunW5lYNR+crmSK8ZO7wOZeZhDdHNEIkD54RZ42CM2Wz14wZbddDyCS+MHttPQPWCN7PpG6u9DmsdgqjBHQnKPEqD3PEca16X5bFXmLrTM9dW5eZRb7JDbVGK8aoMqwCotbhjciEUWkADpaP+uWxkKrSLmLp0X0X6qTpY7Qu/lkMdd2gwtMZZh/qDvkDJgXkR1zcczFUyI1gVnZUabxhITIQxfuJi9RT/8i+UirMJfa37gvfUaHyy11OiMxFxkOxq8W3dLb5Gl74BkXPmewI2PvdZzpSPhZWQ1q14Ji/7UpH22Ele4Modcq6HqTo4pp+2qGVt41NtU+2VHt/AN98nJLywHqn9erCFh0KnrOwKgLEIP+B/l6KZIr/fzX/AqgprOSLBgAA

  - path: /etc/kubernetes/cni/net.d/10-flannel.conf
    content: |
        {
            "name": "podnet",
            "type": "flannel",
            "delegate": {
                "isDefaultGateway": true
            }
        }

  - path: /home/core/.toolboxrc
    owner: core
    content: |
        TOOLBOX_DOCKER_IMAGE=registry.opensource.zalan.do/teapot/microscope
        TOOLBOX_DOCKER_TAG=v0.0.3
