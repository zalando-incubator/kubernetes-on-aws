version: "2017-09-20"
allow_concurrent_steps: true

steps:
  env: &apply_env
  - name: DEPLOYMENT_PATH
    value: test/e2e
  - name: IAM_ROLE_ARN
    value: "arn:aws:iam::925511348110:role/cluster-lifecycle-manager-entrypoint"
  - name: APPLICATION
    value: kubernetes
  - name: COMPONENT
    value: e2e

steps2:
  env: &e2e_env_amd64
    - name: CLUSTER_DOMAIN
      value: teapot-e2e.zalan.do
    - name: CLUSTER_DOMAIN_INTERNAL
      value: ingress.cluster.local
    - name: RESULT_BUCKET
      value: "teapot-kubernetes-e2e-results"
    - name: ETCD_ENDPOINTS
      value: "https://etcd-server.etcd.teapot-e2e.zalan.do:2479"
    - name: HOSTED_ZONE
      valueFrom:
        configMapKeyRef:
          name: kubernetes-e2e-config
          key: "HOSTED_ZONE"
    - name: REGION
      valueFrom:
        configMapKeyRef:
          name: kubernetes-e2e-config
          key: "REGION"
    - name: AWS_ACCOUNT
      valueFrom:
        secretKeyRef:
          name: kubernetes-e2e-config-secret
          key: "AWS_ACCOUNT"
    - name: ZMON_ROOT_ACCOUNT_ROLE
      valueFrom:
        secretKeyRef:
          name: kubernetes-e2e-config-secret
          key: "ZMON_ROOT_ACCOUNT_ROLE"
    - name: AUDITTRAIL_ROOT_ACCOUNT_ROLE
      valueFrom:
        secretKeyRef:
          name: kubernetes-e2e-config-secret
          key: "AUDITTRAIL_ROOT_ACCOUNT_ROLE"
    - name: APISERVER_BUSINESS_PARTNER_IDS
      valueFrom:
        secretKeyRef:
          name: kubernetes-e2e-config-secret
          key: "APISERVER_BUSINESS_PARTNER_IDS"
    - name: LIGHTSTEP_TOKEN
      valueFrom:
        secretKeyRef:
          name: kubernetes-e2e-config-secret
          key: "LIGHTSTEP_TOKEN"
    - name: OWNER
      valueFrom:
        secretKeyRef:
          name: kubernetes-e2e-config-secret
          key: "OWNER"
    - name: VPC_ID
      valueFrom:
        secretKeyRef:
          name: kubernetes-e2e-config-secret
          key: "VPC_ID"
    - name: EFS_ID
      valueFrom:
        secretKeyRef:
          name: kubernetes-e2e-config-secret
          key: "EFS_ID"
    - name: ETCD_CLIENT_CA_CERT
      valueFrom:
        secretKeyRef:
          name: kubernetes-e2e-config-secret
          key: "ETCD_CLIENT_CA_CERT"
    - name: ETCD_CLIENT_CA_KEY
      valueFrom:
        secretKeyRef:
          name: kubernetes-e2e-config-secret
          key: "ETCD_CLIENT_CA_KEY"
    - name: ETCD_SCALYR_KEY
      valueFrom:
        secretKeyRef:
          name: kubernetes-e2e-config-secret
          key: "ETCD_SCALYR_KEY"
    - name: OKTA_AUTH_ISSUER_URL
      valueFrom:
        secretKeyRef:
          name: kubernetes-e2e-config-secret
          key: "OKTA_AUTH_ISSUER_URL"
    - name: CLUSTER_ADMIN_TOKEN
      valueFrom:
        secretKeyRef:
          name: kubernetes-e2e-credentials
          key: "cluster-token-secret"

pipeline:
- id: build
  depends_on: []
  when:
  - branch: dev
  - branch: alpha
  - branch: beta
  - branch: stable
  - event: pull_request
  vm_config:
    type: linux
    image: "cdp-runtime/go-1.20"
    size: large  # speed up building kubernetes/kubernetes
  cache:
    paths:
    - /go/pkg/mod        # pkg cache for Go modules
    - ~/.cache/go-build  # Go build cache
  type: script
  commands:
  - desc: install deps
    cmd: |
      apt-get update && apt-get install -y rsync
  - desc: build and push
    cmd: |
      cd ./test/e2e/
      make
      go mod tidy
      if ! git diff --quiet go.mod go.sum; then
        echo "Running go mod tidy modified go.mod and/or go.sum"
        exit 1
      fi

      IMAGE=container-registry-test.zalando.net/teapot/kubernetes-on-aws-e2e
      IMAGE=$IMAGE VERSION=$CDP_BUILD_VERSION make build.push.multiarch

# - id: create-cluster-amd64
#   when:
#     event: pull_request
#   depends_on:
#   - build
#   type: process
#   desc: "Create cluster for Kubernetes e2e tests"
#   target: stups-test
#   process: microservice_standard_test
#   config:
#     apply_manifests:
#       env: &apply_env
#       - name: DEPLOYMENT_PATH
#         value: test/e2e
#       - name: IAM_ROLE_ARN
#         value: "arn:aws:iam::925511348110:role/cluster-lifecycle-manager-entrypoint"
#       - name: APPLICATION
#         value: kubernetes
#       - name: COMPONENT
#         value: e2e
#     end2end_tests:
#       metadata:
#         name: e2e
#         labels:
#           application: kubernetes
#           component: e2e
#         annotations:
#           zalando.org/runtime-policy: require-on-demand
#       spec:
#         serviceAccountName: kubernetes-e2e
#         restartPolicy: Never
#         containers:
#         - name: e2e
#           image: "pierone.stups.zalan.do/teapot/kubernetes-on-aws-e2e:#{CDP_BUILD_VERSION}"
#           args:
#           - create-cluster
#           env: &e2e_env_amd64
#             - name: CLUSTER_DOMAIN
#               value: teapot-e2e.zalan.do
#             - name: CLUSTER_DOMAIN_INTERNAL
#               value: ingress.cluster.local
#             - name: RESULT_BUCKET
#               value: "teapot-kubernetes-e2e-results"
#             - name: ETCD_ENDPOINTS
#               value: "https://etcd-server.etcd.teapot-e2e.zalan.do:2479"
#             - name: HOSTED_ZONE
#               valueFrom:
#                 configMapKeyRef:
#                   name: kubernetes-e2e-config
#                   key: "HOSTED_ZONE"
#             - name: REGION
#               valueFrom:
#                 configMapKeyRef:
#                   name: kubernetes-e2e-config
#                   key: "REGION"
#             - name: AWS_ACCOUNT
#               valueFrom:
#                 secretKeyRef:
#                   name: kubernetes-e2e-config-secret
#                   key: "AWS_ACCOUNT"
#             - name: ZMON_ROOT_ACCOUNT_ROLE
#               valueFrom:
#                 secretKeyRef:
#                   name: kubernetes-e2e-config-secret
#                   key: "ZMON_ROOT_ACCOUNT_ROLE"
#             - name: AUDITTRAIL_ROOT_ACCOUNT_ROLE
#               valueFrom:
#                 secretKeyRef:
#                   name: kubernetes-e2e-config-secret
#                   key: "AUDITTRAIL_ROOT_ACCOUNT_ROLE"
#             - name: APISERVER_BUSINESS_PARTNER_IDS
#               valueFrom:
#                 secretKeyRef:
#                   name: kubernetes-e2e-config-secret
#                   key: "APISERVER_BUSINESS_PARTNER_IDS"
#             - name: LIGHTSTEP_TOKEN
#               valueFrom:
#                 secretKeyRef:
#                   name: kubernetes-e2e-config-secret
#                   key: "LIGHTSTEP_TOKEN"
#             - name: OWNER
#               valueFrom:
#                 secretKeyRef:
#                   name: kubernetes-e2e-config-secret
#                   key: "OWNER"
#             - name: VPC_ID
#               valueFrom:
#                 secretKeyRef:
#                   name: kubernetes-e2e-config-secret
#                   key: "VPC_ID"
#             - name: EFS_ID
#               valueFrom:
#                 secretKeyRef:
#                   name: kubernetes-e2e-config-secret
#                   key: "EFS_ID"
#             - name: ETCD_CLIENT_CA_CERT
#               valueFrom:
#                 secretKeyRef:
#                   name: kubernetes-e2e-config-secret
#                   key: "ETCD_CLIENT_CA_CERT"
#             - name: ETCD_CLIENT_CA_KEY
#               valueFrom:
#                 secretKeyRef:
#                   name: kubernetes-e2e-config-secret
#                   key: "ETCD_CLIENT_CA_KEY"
#             - name: ETCD_SCALYR_KEY
#               valueFrom:
#                 secretKeyRef:
#                   name: kubernetes-e2e-config-secret
#                   key: "ETCD_SCALYR_KEY"
#             - name: OKTA_AUTH_ISSUER_URL
#               valueFrom:
#                 secretKeyRef:
#                   name: kubernetes-e2e-config-secret
#                   key: "OKTA_AUTH_ISSUER_URL"
#             - name: CLUSTER_ADMIN_TOKEN
#               valueFrom:
#                 secretKeyRef:
#                   name: kubernetes-e2e-credentials
#                   key: "cluster-token-secret"
#           resources:
#             limits:
#               cpu: 500m
#               memory: 2Gi
#             requests:
#               cpu: 500m
#               memory: 2Gi

# - id: e2e-tests-amd64
#   when:
#     event: pull_request
#   depends_on:
#   - create-cluster-amd64
#   type: process
#   desc: "Kubernetes e2e tests"
#   target: stups-test
#   process: microservice_standard_test
#   config:
#     apply_manifests:
#       env: *apply_env
#     end2end_tests:
#       metadata:
#         name: e2e
#         labels:
#           application: kubernetes
#           component: e2e
#         annotations:
#           zalando.org/runtime-policy: require-on-demand
#       spec:
#         serviceAccountName: kubernetes-e2e
#         restartPolicy: Never
#         containers:
#         - name: e2e
#           image: "pierone.stups.zalan.do/teapot/kubernetes-on-aws-e2e:#{CDP_BUILD_VERSION}"
#           args:
#           - e2e
#           env: *e2e_env_amd64
#           resources:
#             limits:
#               cpu: 2
#               memory: 8Gi
#             requests:
#               cpu: 2
#               memory: 8Gi

# - id: e2e-load-test-result-amd64
#   when:
#     event: pull_request
#   depends_on:
#   - create-cluster-amd64
#   type: process
#   desc: "Kubernetes e2e load tests"
#   target: stups-test
#   process: microservice_standard_test
#   config:
#     apply_manifests:
#       env: *apply_env
#     end2end_tests:
#       metadata:
#         name: e2e
#         labels:
#           application: kubernetes
#           component: e2e
#         annotations:
#           zalando.org/runtime-policy: require-on-demand
#       spec:
#         serviceAccountName: kubernetes-e2e
#         restartPolicy: Never
#         containers:
#         - name: e2e
#           image: "pierone.stups.zalan.do/teapot/kubernetes-on-aws-e2e:#{CDP_BUILD_VERSION}"
#           args:
#           - loadtest-e2e
#           env: *e2e_env_amd64
#           resources:
#             limits:
#               cpu: 1000m
#               memory: 1000Mi
#             requests:
#               cpu: 1000m
#               memory: 1000Mi

# - id: stackset-e2e-tests-amd64
#   when:
#     event: pull_request
#   depends_on:
#   - create-cluster-amd64
#   type: process
#   desc: "StackSet e2e tests"
#   target: stups-test
#   process: microservice_standard_test
#   config:
#     apply_manifests:
#       env: *apply_env
#     end2end_tests:
#       metadata:
#         name: e2e
#         labels:
#           application: kubernetes
#           component: e2e
#         annotations:
#           zalando.org/runtime-policy: require-on-demand
#       spec:
#         serviceAccountName: kubernetes-e2e
#         restartPolicy: Never
#         containers:
#         - name: e2e
#           image: "pierone.stups.zalan.do/teapot/kubernetes-on-aws-e2e:#{CDP_BUILD_VERSION}"
#           args:
#           - stackset-e2e
#           env: *e2e_env_amd64
#           resources:
#             limits:
#               cpu: 2
#               memory: 1Gi
#             requests:
#               cpu: 2
#               memory: 1Gi

# - id: decommission-cluster-amd64
#   when:
#     event: pull_request
#   depends_on:
#   - e2e-tests-amd64
#   - stackset-e2e-tests-amd64
#   - e2e-load-test-result-amd64
#   type: process
#   desc: "Decommission cluster used for Kubernetes e2e tests"
#   target: stups-test
#   process: microservice_standard_test
#   config:
#     apply_manifests:
#       env: *apply_env
#     end2end_tests:
#       metadata:
#         name: e2e
#         labels:
#           application: kubernetes
#           component: e2e
#         annotations:
#           zalando.org/runtime-policy: require-on-demand
#       spec:
#         serviceAccountName: kubernetes-e2e
#         restartPolicy: Never
#         containers:
#         - name: e2e
#           image: "pierone.stups.zalan.do/teapot/kubernetes-on-aws-e2e:#{CDP_BUILD_VERSION}"
#           args:
#           - decommission-cluster
#           env: *e2e_env_amd64
#           resources:
#             limits:
#               cpu: 500m
#               memory: 1Gi
#             requests:
#               cpu: 500m
#               memory: 1Gi

# Dedicated test suite for running master nodes and skipper-ingress pods on arm64. Let's remove it once it's not needed anymore.

- id: create-cluster-arm64
  when:
    event: pull_request
  depends_on:
  - build
  type: process
  desc: "Create cluster for Kubernetes e2e tests"
  target: stups-test
  process: microservice_standard_test
  config:
    apply_manifests:
      env: *apply_env
    end2end_tests:
      metadata:
        name: e2e
        labels:
          application: kubernetes
          component: e2e
        annotations:
          zalando.org/runtime-policy: require-on-demand
      spec:
        serviceAccountName: kubernetes-e2e
        restartPolicy: Never
        containers:
        - name: e2e
          image: "container-registry-test.zalando.net/teapot/kubernetes-on-aws-e2e:#{CDP_BUILD_VERSION}"
          args:
          - create-cluster
          env: &e2e_env_arm64
          - name: CLUSTER_DOMAIN
            value: teapot-e2e.zalan.do
          - name: CLUSTER_DOMAIN_INTERNAL
            value: ingress.cluster.local
          - name: RESULT_BUCKET
            value: "teapot-kubernetes-e2e-results"
          - name: ETCD_ENDPOINTS
            value: "https://etcd-server.etcd.teapot-e2e.zalan.do:2479"
          - name: MASTER_INSTANCE_FAMILY
            value: "m6g"
          - name: WORKER_INSTANCE_FAMILY
            value: "m6g"
          - name: SKIPPER_INGRESS_INSTANCE_TYPES
            value: '"c6g.large", "c6gn.large", "m6g.large", "t4g.large"'
          - name: CPU_ARCH
            value: arm64
          - name: HOSTED_ZONE
            valueFrom:
              configMapKeyRef:
                name: kubernetes-e2e-config
                key: "HOSTED_ZONE"
          - name: REGION
            valueFrom:
              configMapKeyRef:
                name: kubernetes-e2e-config
                key: "REGION"
          - name: AWS_ACCOUNT
            valueFrom:
              secretKeyRef:
                name: kubernetes-e2e-config-secret
                key: "AWS_ACCOUNT"
          - name: ZMON_ROOT_ACCOUNT_ROLE
            valueFrom:
              secretKeyRef:
                name: kubernetes-e2e-config-secret
                key: "ZMON_ROOT_ACCOUNT_ROLE"
          - name: AUDITTRAIL_ROOT_ACCOUNT_ROLE
            valueFrom:
              secretKeyRef:
                name: kubernetes-e2e-config-secret
                key: "AUDITTRAIL_ROOT_ACCOUNT_ROLE"
          - name: APISERVER_BUSINESS_PARTNER_IDS
            valueFrom:
              secretKeyRef:
                name: kubernetes-e2e-config-secret
                key: "APISERVER_BUSINESS_PARTNER_IDS"
          - name: LIGHTSTEP_TOKEN
            valueFrom:
              secretKeyRef:
                name: kubernetes-e2e-config-secret
                key: "LIGHTSTEP_TOKEN"
          - name: OWNER
            valueFrom:
              secretKeyRef:
                name: kubernetes-e2e-config-secret
                key: "OWNER"
          - name: VPC_ID
            valueFrom:
              secretKeyRef:
                name: kubernetes-e2e-config-secret
                key: "VPC_ID"
          - name: EFS_ID
            valueFrom:
              secretKeyRef:
                name: kubernetes-e2e-config-secret
                key: "EFS_ID"
          - name: ETCD_CLIENT_CA_CERT
            valueFrom:
              secretKeyRef:
                name: kubernetes-e2e-config-secret
                key: "ETCD_CLIENT_CA_CERT"
          - name: ETCD_CLIENT_CA_KEY
            valueFrom:
              secretKeyRef:
                name: kubernetes-e2e-config-secret
                key: "ETCD_CLIENT_CA_KEY"
          - name: ETCD_SCALYR_KEY
            valueFrom:
              secretKeyRef:
                name: kubernetes-e2e-config-secret
                key: "ETCD_SCALYR_KEY"
          - name: OKTA_AUTH_ISSUER_URL
            valueFrom:
              secretKeyRef:
                name: kubernetes-e2e-config-secret
                key: "OKTA_AUTH_ISSUER_URL"
          - name: CLUSTER_ADMIN_TOKEN
            valueFrom:
              secretKeyRef:
                name: kubernetes-e2e-credentials
                key: "cluster-token-secret"
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 2Gi

- id: e2e-tests-arm64
  when:
    event: pull_request
  depends_on:
  - create-cluster-arm64
  type: process
  desc: "Kubernetes e2e tests"
  target: stups-test
  process: microservice_standard_test
  config:
    apply_manifests:
      env: *apply_env
    end2end_tests:
      metadata:
        name: e2e
        labels:
          application: kubernetes
          component: e2e
        annotations:
          zalando.org/runtime-policy: require-on-demand
      spec:
        serviceAccountName: kubernetes-e2e
        restartPolicy: Never
        containers:
        - name: e2e
          image: "container-registry-test.zalando.net/teapot/kubernetes-on-aws-e2e:#{CDP_BUILD_VERSION}"
          args:
          - e2e
          env: *e2e_env_arm64
          resources:
            limits:
              cpu: 2
              memory: 8Gi
            requests:
              cpu: 2
              memory: 8Gi

- id: e2e-load-test-result-arm64
  when:
    event: pull_request
  depends_on:
  - create-cluster-arm64
  type: process
  desc: "Kubernetes e2e load tests"
  target: stups-test
  process: microservice_standard_test
  config:
    apply_manifests:
      env: *apply_env
    end2end_tests:
      metadata:
        name: e2e
        labels:
          application: kubernetes
          component: e2e
        annotations:
          zalando.org/runtime-policy: require-on-demand
      spec:
        serviceAccountName: kubernetes-e2e
        restartPolicy: Never
        containers:
        - name: e2e
          image: "container-registry-test.zalando.net/teapot/kubernetes-on-aws-e2e:#{CDP_BUILD_VERSION}"
          args:
          - loadtest-e2e
          env: *e2e_env_arm64
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 1000m
              memory: 1000Mi

- id: stackset-e2e-tests-arm64
  when:
    event: pull_request
  depends_on:
  - create-cluster-arm64
  type: process
  desc: "StackSet e2e tests"
  target: stups-test
  process: microservice_standard_test
  config:
    apply_manifests:
      env: *apply_env
    end2end_tests:
      metadata:
        name: e2e
        labels:
          application: kubernetes
          component: e2e
        annotations:
          zalando.org/runtime-policy: require-on-demand
      spec:
        serviceAccountName: kubernetes-e2e
        restartPolicy: Never
        containers:
        - name: e2e
          image: "container-registry-test.zalando.net/teapot/kubernetes-on-aws-e2e:#{CDP_BUILD_VERSION}"
          args:
          - stackset-e2e
          env: *e2e_env_arm64
          resources:
            limits:
              cpu: 2
              memory: 1Gi
            requests:
              cpu: 2
              memory: 1Gi


- id: decommission-cluster-arm64
  when:
    event: pull_request
  depends_on:
  - e2e-tests-arm64
  - stackset-e2e-tests-arm64
  - e2e-load-test-result-arm64
  type: process
  desc: "Decommission cluster used for Kubernetes e2e tests"
  target: stups-test
  process: microservice_standard_test
  config:
    apply_manifests:
      env: *apply_env
    end2end_tests:
      metadata:
        name: e2e
        labels:
          application: kubernetes
          component: e2e
        annotations:
          zalando.org/runtime-policy: require-on-demand
      spec:
        serviceAccountName: kubernetes-e2e
        restartPolicy: Never
        containers:
        - name: e2e
          image: "container-registry-test.zalando.net/teapot/kubernetes-on-aws-e2e:#{CDP_BUILD_VERSION}"
          args:
          - decommission-cluster
          env: *e2e_env_arm64
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 1Gi
